{"version":3,"sources":["c/cell.jsx","c/column.jsx","c/table.jsx","c/tableClass.js","c/controlbar_1.jsx","c/faq.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Cell","props","useContext","AppContext","state","dispatch","d","data","options","disabled","useState","selected","spellcheckerError","spellcheckerErrorArray","selecting","e","val","type","payload","node","target","closest","position","value","CellOptions","className","onMouseDown","onMouseUp","onMouseMove","SC","company","p","table","selectedCell","SCvalue","getCell","x","y","SpellcheckerErrorIndicator","onBlur","spellcheck","word","fetch","then","res","json","onChange","onClick","length","class","part","col","ActionOption","icon","beforeOptions","children","Col","colOptions","useRef","undefined","rows","map","c","ind","width","title","ref","stopPropagation","document","querySelectorAll","forEach","m","classList","remove","current","contains","add","Menu","insertFromCP","a","navigator","clipboard","readText","text","change","cb","changeSort","sort","part_index","col_index","sort_title","Table","TableClass","n","this","colsCount","colIndexesToReplace","push","newRow","i","setCell","row","cell","r","newCell","b","strA","toLowerCase","strB","Error","replace","from","to","colIndex","ControlBar_1","Btn","Btn2","CutSquareBrackets","BtnReplace","BtnClearAll","alert","open","toggleOpen","setFrom","setTo","useEffect","indexOf","placeholder","bar","colChangerBar","menu","openMenu","submenu","openSubmenu","toggleMenu","key","method","style","fontSize","marginBottom","FAQ","reducer","action","pay","pos","split","setCol","toggleRowDisable","setSelectedCell","t","clearCol","clearAll","sortColumn","cut_square_brackets","changeColFromReplaceBar","createContext","App","useReducer","walletCount","init","setInit","body","addEventListener","om","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab1ea9cd.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\"\r\nimport { AppContext } from \"../App\"\r\n\r\nexport function Cell(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const d = props.data.options.disabled\r\n  const [selected, setSelected] = useState(false)\r\n  const [spellcheckerError, spellcheckerErrorArray] = useState([])\r\n\r\n  const change = (e) => {\r\n    const val = e.target.value;\r\n    dispatch({\r\n      type: \"setCell\",\r\n      payload: {\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const selecting = (e, val) => {\r\n    dispatch({\r\n      type: \"selectingCell\",\r\n      payload: {\r\n        node: e.target.closest('.cell-wrapper'),\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const copy = () => {\r\n    const SC = state.company[props.position.p].table.selectedCell\r\n    if (SC) {\r\n      const SCvalue = state.company[props.position.p].table.getCell(SC.x, SC.y)\r\n      if (SC.x === props.position.x) { // только в своей колонке\r\n        dispatch({\r\n          type: \"setCell\",\r\n          payload: {\r\n            position: props.position,\r\n            value: SCvalue.data\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const spellcheck = (e) => {\r\n    if (props.spellcheck) {\r\n      const word = e.target.value\r\n      fetch('https://speller.yandex.net/services/spellservice.json/checkText?text=' + word)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          spellcheckerErrorArray(res)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CellOptions {...props} d={d}>\r\n      <label\r\n        className=\"cell\"\r\n        onMouseDown={(e) => selecting(e, true)}\r\n        onMouseUp={(e) => selecting(e, false)}\r\n        onMouseMove={copy}>\r\n\r\n        <SpellcheckerErrorIndicator d={spellcheckerError} />\r\n\r\n        <input\r\n          type={props.type}\r\n          onBlur={spellcheck}\r\n          className=\"cell-input\"\r\n          value={props.data.data}\r\n          onChange={change}\r\n          disabled={d} />\r\n        {selected && <div className=\"selected-marker\" onClick={(e) => null}></div>}\r\n      </label>\r\n    </CellOptions>\r\n  )\r\n}\r\n\r\nfunction SpellcheckerErrorIndicator(props) {\r\n  if (props.d.length === 0) return null;\r\n  else {\r\n    return (\r\n      <div className=\"spellchecker-error-indicator\">\r\n        <i class=\"bi bi-question-octagon\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction CellOptions(props) {\r\n\r\n  const beforeOptions = () => {\r\n    if (props.part === \"0\" && props.col === \"0\") {\r\n      return <ActionOption {...props} icon=\"bi bi-eye\" />\r\n    }\r\n  }\r\n\r\n  const afterOptions = () => {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cell-wrapper\" disabled={props.d}>\r\n      <div className=\"before\">{beforeOptions()}</div>\r\n      {props.children}\r\n      <div className=\"after\">{afterOptions()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ActionOption(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const action = () => {\r\n    dispatch({\r\n      type: 'toggleRowDisable',\r\n      payload: { position: props.position, value: props.d }\r\n    })\r\n  }\r\n\r\n  return (<i onClick={action} className={props.icon}></i>)\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { Cell } from \"./cell\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function Col(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const [menuStatus, setMenuStatus] = useState(false)\r\n  const colOptions = useRef(null);\r\n  let col = 'нет данных';\r\n\r\n  if (state.company[props.part] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (state.company[+props.part].table !== undefined) {\r\n    col = state.company[+props.part].table.rows.map((c, ind) => {\r\n      return <Cell\r\n        spellcheck={props.spellcheck}\r\n        type={props.type}\r\n        key={ind}\r\n        {...props}\r\n        data={c[props.col]}\r\n        position={{ p: props.part, x: props.col, y: ind }} />\r\n    })\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation()\r\n    document.querySelectorAll(\".options.open\").forEach((m) => {\r\n      m.classList.remove(\"open\")\r\n    })\r\n    if (colOptions.current.classList.contains('open')) {\r\n      colOptions.current.classList.remove('open')\r\n    }\r\n    else {\r\n      colOptions.current.classList.add('open')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div width={props.width} className=\"col-wrapper\">\r\n      <div className=\"th\">\r\n        <span>{props.title}</span>\r\n        <div className=\"options\" ref={colOptions} onClick={onClick}>\r\n          <i className=\"bi-three-dots-vertical\"></i>\r\n          <Menu {...props} />\r\n        </div>\r\n      </div>\r\n      {col}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Menu(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n\r\n  const insertFromCP = async () => {\r\n    let text = await navigator.clipboard.readText();\r\n    dispatch({\r\n      type: 'copyFromClipboard',\r\n      payload: {\r\n        part: props.part,\r\n        col: props.col,\r\n        data: text\r\n      }\r\n    });\r\n  }\r\n\r\n  const change = (e, cb) => {\r\n    e.stopPropagation()\r\n    e.target.closest('.options.open').classList.remove('open')\r\n    cb();\r\n  }\r\n\r\n  const changeSort = (sort) => {\r\n    dispatch({\r\n      type: 'sortColumn',\r\n      payload: {\r\n        part_index: props.part,\r\n        col_index: props.col,\r\n        sort_title: sort\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, insertFromCP)}>\r\n        <i className=\"bi bi-clipboard-plus\"></i>\r\n        <span>Вставить из буфера</span>\r\n      </div>\r\n\r\n      <div className=\"menu-item has-children\">\r\n        <i className=\"bi bi-funnel\"></i>\r\n        <span>Сортировать</span>\r\n\r\n        <div className=\"menu sub-menu\">\r\n          <div onClick={() => changeSort('upper_numeric')} className=\"menu-item\"><span>{'>'}</span></div>\r\n          <div onClick={() => changeSort('lower_numeric')} className=\"menu-item\"><span>{'<'}</span></div>\r\n          <div onClick={() => changeSort('upper_alphabetical')} className=\"menu-item\"><span>А-Я</span></div>\r\n          <div onClick={() => changeSort('lower_alphabetical')} className=\"menu-item\"><span>Я-А</span></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"delimeter\"></div>\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, () => dispatch({\r\n        type: \"clearCol\",\r\n        payload: {\r\n          part: props.part,\r\n          col: props.col\r\n        },\r\n      }))}>\r\n        <i class=\"bi bi-x-octagon\"></i>\r\n        <span>Очистить колонку</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\"\r\nimport { Col } from \"./column\";\r\n\r\nexport function Table(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"0\" title=\"Ключевые фразы\" />\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"1\" title=\"Группы ключевых слов\" />\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"2\" title=\"Название компаний\" />\r\n      <Col type=\"number\" spellcheck={false} width=\"50\" part=\"0\" col=\"3\" title=\"YW\" />\r\n      <Col type=\"number\" spellcheck={false} width=\"50\" part=\"0\" col=\"4\" title='\"YW\"' />\r\n    </div>\r\n  )\r\n}","class TableClass {\r\n  constructor(n) {\r\n    this.colsCount = n\r\n    this.selectedCell = null\r\n    this.rows = []\r\n    this.colIndexesToReplace = []\r\n  }\r\n\r\n  setCell(x, y, data) {\r\n    while (this.rows.length <= y) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n    if (this.rows[y] !== undefined && this.rows[y][x] !== undefined) {\r\n      this.rows[+y][+x].data = data;\r\n    }\r\n  }\r\n\r\n  getCell(x, y) {\r\n    return this.rows[y][x]\r\n  }\r\n\r\n  setCol(x, data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.setCell(x, i, data[i]);\r\n    };\r\n    return this.rows;\r\n  }\r\n\r\n  getRow(y) {\r\n    return this.rows[y];\r\n  }\r\n\r\n  getCol(col_index) {\r\n    let col = []\r\n    this.rows.forEach((row) => {\r\n      col.push(row[col_index])\r\n    })\r\n    return col\r\n  }\r\n\r\n  toggleRowDisable(y, value) {\r\n    this.rows[y].forEach((cell) => {\r\n      cell.options.disabled = !value;\r\n    })\r\n    return this.rows;\r\n  }\r\n\r\n  newCell() {\r\n    return {\r\n      data: '',\r\n      options: {\r\n        disabled: false\r\n      }\r\n    }\r\n  }\r\n\r\n  newRow() {\r\n    let r = [];\r\n    for (let n = 0; n < this.colsCount; n++) {\r\n      r.push(this.newCell());\r\n    }\r\n    return r;\r\n  }\r\n\r\n  setSelectedCell(val) {\r\n    this.selectedCell = val\r\n  }\r\n\r\n  clearCol(col) {\r\n    this.rows.forEach((row) => {\r\n      row[col].data = \"\"\r\n    })\r\n  }\r\n\r\n  clearAll() {\r\n    this.rows.forEach(r => {\r\n      r.forEach(c => {\r\n        c.data = \"\"\r\n      })\r\n    })\r\n  }\r\n\r\n  sortColumn(col_index, sort_title) {\r\n    switch (sort_title) {\r\n\r\n      case \"upper_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return a[col_index].data - b[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"lower_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return b[col_index].data - a[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"upper_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a[col_index].data.toLowerCase(),\r\n            strB = b[col_index].data.toLowerCase()\r\n          if (strA < strB) return -1\r\n          if (strA > strB) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      case \"lower_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a[col_index].data.toLowerCase(),\r\n            strB = b[col_index].data.toLowerCase()\r\n          if (strB < strA) return -1\r\n          if (strB > strA) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  cut_square_brackets() {\r\n    this.rows.forEach(row => {\r\n      row.forEach(cell => {\r\n        cell.data = cell.data.replace(/\\[.*?\\]/g, '');\r\n      })\r\n    })\r\n  }\r\n\r\n  replace(from, to) {\r\n    this.rows.forEach(row => {\r\n      row.forEach((cell, ind) => {\r\n        if (this.colIndexesToReplace[ind]) {\r\n          cell.data = cell.data.replace(from, to);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  changeColFromReplaceBar(colIndex, value) {\r\n    this.colIndexesToReplace[colIndex] = !value\r\n  }\r\n\r\n  init() {\r\n    // add rows to table\r\n    for (let i = 0; i < 10; i++) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n\r\n    for (let n = 0; n < this.colsCount; n++) {\r\n      this.colIndexesToReplace.push(false)\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default TableClass;","import React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nexport function ControlBar_1(props) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Btn />\r\n      <div className=\"delimeter\"></div>\r\n      {/* <Btn1 /> */}\r\n      <Btn2 />\r\n      <CutSquareBrackets {...props} />\r\n      <BtnReplace {...props} />\r\n      <div className=\"delimeter\"></div>\r\n      <BtnClearAll {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => { alert('Переход на этап 2') }} className=\"btn\">На второй шаг</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnClearAll(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearAll = () => {\r\n    dispatch({\r\n      type: \"clearAll\",\r\n      payload: props.part\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={clearAll} className=\"btn\">Очистить всё</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CutSquareBrackets(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => {\r\n        dispatch({\r\n          type: \"cutSquareBrackets\",\r\n          payload: props.part\r\n        })\r\n      }} className=\"btn\">[*]</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnReplace(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [open, toggleOpen] = useState(false)\r\n  const [from, setFrom] = useState('')\r\n  const [to, setTo] = useState('')\r\n\r\n  const changeFrom = (e) => {\r\n    setFrom(e.target.value)\r\n  }\r\n\r\n  const changeTo = (e) => {\r\n    setTo(e.target.value)\r\n  }\r\n\r\n  const replace = () => {\r\n    dispatch({\r\n      type: 'replace',\r\n      payload: {\r\n        part_index: props.part,\r\n        from,\r\n        to\r\n      }\r\n    })\r\n    const cells = document.querySelectorAll('.cell-input')\r\n    cells.forEach(c => {\r\n      c.classList.remove('find-word')\r\n    })\r\n  }\r\n\r\n  const changeColBarItem = (colIndex) => {\r\n    dispatch({\r\n      type: \"changeColFromReplaceBar\",\r\n      payload: {\r\n        part_index: props.part,\r\n        col_index: colIndex,\r\n        value: state.company[props.part].table.colIndexesToReplace[colIndex]\r\n      }\r\n    })\r\n  }\r\n\r\n  const colChangerBar = () => {\r\n    let bar = [];\r\n    for (let i = 0; i < state.company[props.part].table.colsCount; i++) {\r\n      bar.push(\r\n        <div\r\n          key={i}\r\n          onClick={() => changeColBarItem(i)}\r\n          className={`col-icon ${state.company[props.part].table.colIndexesToReplace[i] ? 'changed' : ''}`}>\r\n        </div >\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"col-changer-bar\">\r\n        {bar}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      const cells = document.querySelectorAll('.cell-input')\r\n      cells.forEach(c => {\r\n        if (c.value.indexOf(from) >= 0) {\r\n          c.classList.add('find-word')\r\n        }\r\n        else {\r\n          c.classList.remove('find-word')\r\n        }\r\n      })\r\n    }\r\n  }, [from])\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => toggleOpen(!open)} className=\"btn\">{'ABC > XYZ'}</div>\r\n      {open &&\r\n        <div className=\"replace-form\">\r\n          <div className=\"d-flex\">\r\n            <label>\r\n              <input placeholder=\"найти\" onChange={changeFrom} type=\"text\" value={from} />\r\n            </label>\r\n            <label>\r\n              <input placeholder=\"и заменить\" onChange={changeTo} type=\"text\" value={to} />\r\n            </label>\r\n            <div onClick={replace} className=\"btn mr5\">Заменить</div>\r\n            <div onClick={() => toggleOpen(false)} className=\"btn\">\r\n              <i className=\"bi bi-x-lg\"></i>\r\n            </div>\r\n          </div>\r\n          {colChangerBar()}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn1(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'walletCount',\r\n        value: state.walletCount + n\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? 'Кол-во объявлений' : 'Закрыть'}\r\n        {!menu && <span className=\"badge\">{state.walletCount}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div onClick={() => change(1)} className=\"btn icon\"><i className=\"bi bi-plus\"></i></div>\r\n          <span className=\"wallet-count\" style={{ fontSize: '1.5rem', margin: '5px', display: 'block' }}>{state.walletCount}</span>\r\n          <div onClick={() => change(-1)} className=\"btn icon\"><i className=\"bi bi-dash\"></i></div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn2(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n  const [submenu, openSubmenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    if (menu) {\r\n      openSubmenu(false)\r\n    }\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'method',\r\n        value: n\r\n      }\r\n    })\r\n    toggleMenu();\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? state.method : 'Закрыть'}\r\n        {false && <span className=\"badge\">{state.method}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div\r\n            onClick={() => openSubmenu('SKAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'SKAG' && 'changed'}`}>SKAG</div>\r\n          {submenu === 'SKAG' &&\r\n            <div className=\"sidebar-submenu\">\r\n              <div onClick={() => change('SKAG <20')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">{'<20'}</div>\r\n              <div onClick={() => change('SKAG 20+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">20+</div>\r\n              <div onClick={() => change('SKAG 100+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">100+</div>\r\n              <div onClick={() => change('SKAG 500+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">500+</div>\r\n              <div onClick={() => change('SKAG 1000+')} style={{ fontSize: '1rem', width: '100%' }} className=\"btn\">1000+</div>\r\n            </div>\r\n          }\r\n          <div\r\n            onClick={() => change('STAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'STAG' && 'changed'}`}>STAG</div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","\r\n\r\nexport function FAQ() {\r\n  return (\r\n    <ul className=\"faq part\">\r\n      <li>Для распространения значения ячейки в столбце, выделите нужную ячейку и, удерживая ЛКМ, двигайтесь вверх или вниз</li>\r\n      <li>Кнопка \"Очистить всё\" полностью очищает текущую таблицу </li>\r\n    </ul>\r\n  )\r\n}","import { useReducer, createContext, useState, useEffect } from 'react';\nimport './App.scss';\n// Components\nimport { Table } from './c/table';\nimport TableClass from './c/tableClass';\nimport { ControlBar_1 } from './c/controlbar_1';\nimport { FAQ } from './c/faq';\n\nfunction reducer(state, action) {\n  const [type, pay] = [action.type, action.payload]\n  const pos = pay ? pay.position : null\n  const table = pos ? state.company[pos.p].table : null\n\n  switch (type) {\n    case 'copyFromClipboard':\n      const { part, col } = { ...action.payload };\n      let data = action.payload.data.split('\\r\\n');\n      for (let i = 0; i < data.length; i++) {\n        state.company[part].table.setCol(col, data)\n        if (part == 0 && col == 1 && state.company[part].table.getCell(+col + 1, i).data === \"\") { // Если название компании в строке пустое, копируем из групп\n          state.company[part].table.setCell(+col + 1, i, data[i])\n        }\n      }\n      return { ...state }\n\n    case 'toggleRowDisable':\n      const { p, x, y } = { ...action.payload.position }\n      if (state.company[p] !== undefined) {\n        state.company[p].table.toggleRowDisable(y, action.payload.value);\n      }\n      return { ...state }\n\n    case 'updateOption':\n      state[pay.key] = pay.value;\n      return { ...state }\n\n    case \"selectingCell\":\n      state.company[pay.position.p].table.setSelectedCell(pay.value ? pay.position : null)\n      return { ...state }\n\n    case \"copyModOff\":\n      state.company.forEach((t) => {\n        t.table.setSelectedCell(null)\n      })\n      return { ...state }\n\n    case \"setCell\":\n      table.setCell(pos.x, pos.y, pay.value)\n      return { ...state }\n\n    case \"clearCol\":\n      state.company[pay.part].table.clearCol(pay.col)\n      return { ...state }\n\n    case \"clearAll\":\n      state.company[pay].table.clearAll()\n      return { ...state }\n\n    case \"sortColumn\":\n      state.company[pay.part_index].table.sortColumn(pay.col_index, pay.sort_title)\n      return { ...state }\n\n    case \"cutSquareBrackets\":\n      state.company[pay].table.cut_square_brackets()\n      return { ...state }\n\n    case \"replace\":\n      state.company[pay.part_index].table.replace(pay.from, pay.to)\n      return { ...state }\n\n    case \"changeColFromReplaceBar\":\n      state.company[pay.part_index].table.changeColFromReplaceBar(pay.col_index, pay.value)\n      return { ...state }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport let AppContext = createContext(null);\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, {\n    // OPTIONS\n    walletCount: 3,\n    method: \"STAG\",\n    // PARTs\n    company: [\n      {\n        table: new TableClass(5).init()\n      },\n      {\n        table: new TableClass(5).init()\n      }\n    ],\n  })\n\n  const [init, setInit] = useState(false)\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', (e) => {\n      dispatch({\n        type: \"copyModOff\"\n      })\n    })\n    document.body.addEventListener(\"click\", () => {\n      const openMenus = document.querySelectorAll(\".options.open\")\n      openMenus.forEach((om) => {\n        om.classList.remove('open')\n      })\n    })\n    setInit(true)\n  }, [init])\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"part\">\n        <Table />\n        <ControlBar_1 part=\"0\" />\n      </div>\n      <FAQ />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}