{"version":3,"sources":["c/cell.jsx","c/column.jsx","c/table.jsx","c/tableClass.js","c/controlbar_1.jsx","c/faq.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Cell","props","useContext","AppContext","state","dispatch","d","data","options","disabled","useState","selected","selecting","e","val","type","payload","node","target","closest","position","value","CellOptions","className","onMouseDown","onMouseUp","onMouseMove","SC","company","p","table","selectedCell","SCvalue","getCell","x","y","onChange","onClick","part","col","ActionOption","icon","beforeOptions","children","Col","colOptions","useRef","undefined","rows","map","c","ind","width","title","ref","stopPropagation","document","querySelectorAll","forEach","m","classList","remove","current","contains","add","Menu","insertFromCP","a","navigator","clipboard","readText","text","change","cb","changeSort","sort","part_index","col_index","sort_title","class","Table","TableClass","n","this","colsCount","length","push","newRow","i","setCell","row","cell","r","newCell","b","strA","toLowerCase","strB","Error","replace","from","to","ControlBar_1","Btn","Btn2","CutSquareBrackets","BtnReplace","BtnClearAll","alert","open","toggleOpen","setFrom","setTo","useEffect","indexOf","placeholder","menu","openMenu","submenu","openSubmenu","toggleMenu","key","method","style","fontSize","marginBottom","FAQ","reducer","action","pay","pos","split","setCol","toggleRowDisable","setSelectedCell","t","clearCol","clearAll","sortColumn","cut_square_brackets","createContext","App","useReducer","walletCount","init","setInit","body","addEventListener","om","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3409ffb5.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\"\r\nimport { AppContext } from \"../App\"\r\n\r\nexport function Cell(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const d = props.data.options.disabled\r\n  const [selected, setSelected] = useState(false)\r\n\r\n  const change = (e) => {\r\n    const val = e.target.value;\r\n    dispatch({\r\n      type: \"setCell\",\r\n      payload: {\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const selecting = (e, val) => {\r\n    dispatch({\r\n      type: \"selectingCell\",\r\n      payload: {\r\n        node: e.target.closest('.cell-wrapper'),\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const copy = () => {\r\n    const SC = state.company[props.position.p].table.selectedCell\r\n    if (SC) {\r\n      const SCvalue = state.company[props.position.p].table.getCell(SC.x, SC.y)\r\n      if (SC.x === props.position.x) { // только в своей колонке\r\n        dispatch({\r\n          type: \"setCell\",\r\n          payload: {\r\n            position: props.position,\r\n            value: SCvalue.data\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CellOptions {...props} d={d}>\r\n      <label\r\n        className=\"cell\"\r\n        onMouseDown={(e) => selecting(e, true)}\r\n        onMouseUp={(e) => selecting(e, false)}\r\n        onMouseMove={copy}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"cell-input\"\r\n          value={props.data.data}\r\n          onChange={change}\r\n          disabled={d} />\r\n        {selected && <div className=\"selected-marker\" onClick={(e) => null}></div>}\r\n      </label>\r\n    </CellOptions>\r\n  )\r\n}\r\n\r\nfunction CellOptions(props) {\r\n\r\n  const beforeOptions = () => {\r\n    if (props.part === \"0\" && props.col === \"0\") {\r\n      return <ActionOption {...props} icon=\"bi bi-eye\" />\r\n    }\r\n  }\r\n\r\n  const afterOptions = () => {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cell-wrapper\" disabled={props.d}>\r\n      <div className=\"before\">{beforeOptions()}</div>\r\n      {props.children}\r\n      <div className=\"after\">{afterOptions()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ActionOption(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const action = () => {\r\n    dispatch({\r\n      type: 'toggleRowDisable',\r\n      payload: { position: props.position, value: props.d }\r\n    })\r\n  }\r\n\r\n  return (<i onClick={action} className={props.icon}></i>)\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { Cell } from \"./cell\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function Col(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const [menuStatus, setMenuStatus] = useState(false)\r\n  const colOptions = useRef(null);\r\n  let col = 'нет данных';\r\n\r\n  if (state.company[props.part] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (state.company[+props.part].table !== undefined) {\r\n    col = state.company[+props.part].table.rows.map((c, ind) => {\r\n      return <Cell\r\n        key={ind}\r\n        {...props}\r\n        data={c[props.col]}\r\n        position={{ p: props.part, x: props.col, y: ind }} />\r\n    })\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation()\r\n    document.querySelectorAll(\".options.open\").forEach((m) => {\r\n      m.classList.remove(\"open\")\r\n    })\r\n    if (colOptions.current.classList.contains('open')) {\r\n      colOptions.current.classList.remove('open')\r\n    }\r\n    else {\r\n      colOptions.current.classList.add('open')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div width={props.width} className=\"col-wrapper\">\r\n      <div className=\"th\">\r\n        <span>{props.title}</span>\r\n        <div className=\"options\" ref={colOptions} onClick={onClick}>\r\n          <i className=\"bi-three-dots-vertical\"></i>\r\n          <Menu {...props} />\r\n        </div>\r\n      </div>\r\n      {col}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Menu(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n\r\n  const insertFromCP = async () => {\r\n    let text = await navigator.clipboard.readText();\r\n    dispatch({\r\n      type: 'copyFromClipboard',\r\n      payload: {\r\n        part: props.part,\r\n        col: props.col,\r\n        data: text\r\n      }\r\n    });\r\n  }\r\n\r\n  const change = (e, cb) => {\r\n    e.stopPropagation()\r\n    e.target.closest('.options.open').classList.remove('open')\r\n    cb();\r\n  }\r\n\r\n  const changeSort = (sort) => {\r\n    dispatch({\r\n      type: 'sortColumn',\r\n      payload: {\r\n        part_index: props.part,\r\n        col_index: props.col,\r\n        sort_title: sort\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, insertFromCP)}>\r\n        <i className=\"bi bi-clipboard-plus\"></i>\r\n        <span>Вставить из буфера</span>\r\n      </div>\r\n\r\n      <div className=\"menu-item has-children\">\r\n        <i className=\"bi bi-funnel\"></i>\r\n        <span>Сортировать</span>\r\n\r\n        <div className=\"menu sub-menu\">\r\n          <div onClick={() => changeSort('upper_numeric')} className=\"menu-item\"><span>{'>'}</span></div>\r\n          <div onClick={() => changeSort('lower_numeric')} className=\"menu-item\"><span>{'<'}</span></div>\r\n          <div onClick={() => changeSort('upper_alphabetical')} className=\"menu-item\"><span>А-Я</span></div>\r\n          <div onClick={() => changeSort('lower_alphabetical')} className=\"menu-item\"><span>Я-А</span></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"delimeter\"></div>\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, () => dispatch({\r\n        type: \"clearCol\",\r\n        payload: {\r\n          part: props.part,\r\n          col: props.col\r\n        },\r\n      }))}>\r\n        <i class=\"bi bi-x-octagon\"></i>\r\n        <span>Очистить колонку</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\"\r\nimport { Col } from \"./column\";\r\n\r\nexport function Table(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <Col width=\"100\" part=\"0\" col=\"0\" title=\"Ключевые фразы\" />\r\n      <Col width=\"100\" part=\"0\" col=\"1\" title=\"Группы ключевых слов\" />\r\n      <Col width=\"100\" part=\"0\" col=\"2\" title=\"Название компаний\" />\r\n      <Col width=\"50\" part=\"0\" col=\"3\" title=\"YW\" />\r\n      <Col width=\"50\" part=\"0\" col=\"4\" title='\"YW\"' />\r\n    </div>\r\n  )\r\n}","class TableClass {\r\n  constructor(n) {\r\n    this.colsCount = n\r\n    this.selectedCell = null\r\n    this.rows = []\r\n  }\r\n\r\n  setCell(x, y, data) {\r\n    while (this.rows.length <= y) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n    if (this.rows[y] !== undefined && this.rows[y][x] !== undefined) {\r\n      this.rows[+y][+x].data = data;\r\n    }\r\n  }\r\n\r\n  getCell(x, y) {\r\n    return this.rows[y][x]\r\n  }\r\n\r\n  setCol(x, data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.setCell(x, i, data[i]);\r\n    };\r\n    return this.rows;\r\n  }\r\n\r\n  getRow(y) {\r\n    return this.rows[y];\r\n  }\r\n\r\n  getCol(col_index) {\r\n    let col = []\r\n    this.rows.forEach((row) => {\r\n      col.push(row[col_index])\r\n    })\r\n    return col\r\n  }\r\n\r\n  toggleRowDisable(y, value) {\r\n    this.rows[y].forEach((cell) => {\r\n      cell.options.disabled = !value;\r\n    })\r\n    return this.rows;\r\n  }\r\n\r\n  newCell() {\r\n    return {\r\n      data: '',\r\n      options: {\r\n        disabled: false\r\n      }\r\n    }\r\n  }\r\n\r\n  newRow() {\r\n    let r = [];\r\n    for (let n = 0; n < this.colsCount; n++) {\r\n      r.push(this.newCell());\r\n    }\r\n    return r;\r\n  }\r\n\r\n  setSelectedCell(val) {\r\n    this.selectedCell = val\r\n  }\r\n\r\n  clearCol(col) {\r\n    this.rows.forEach((row) => {\r\n      row[col].data = \"\"\r\n    })\r\n  }\r\n\r\n  clearAll() {\r\n    this.rows.forEach(r => {\r\n      r.forEach(c => {\r\n        c.data = \"\"\r\n      })\r\n    })\r\n  }\r\n\r\n  sortColumn(col_index, sort_title) {\r\n    switch (sort_title) {\r\n\r\n      case \"upper_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return a[col_index].data - b[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"lower_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return b[col_index].data - a[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"upper_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a[col_index].data.toLowerCase(),\r\n            strB = b[col_index].data.toLowerCase()\r\n          if (strA < strB) return -1\r\n          if (strA > strB) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      case \"lower_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a[col_index].data.toLowerCase(),\r\n            strB = b[col_index].data.toLowerCase()\r\n          if (strB < strA) return -1\r\n          if (strB > strA) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  cut_square_brackets() {\r\n    this.rows.forEach(row => {\r\n      row.forEach(cell => {\r\n        cell.data = cell.data.replace(/\\[.*?\\]/g, '');\r\n      })\r\n    })\r\n  }\r\n\r\n  replace(from, to) {\r\n    this.rows.forEach(row => {\r\n      row.forEach(cell => {\r\n        cell.data = cell.data.replace(from, to);\r\n      })\r\n    })\r\n  }\r\n\r\n  init() {\r\n    // add rows to table\r\n    for (let i = 0; i < 10; i++) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default TableClass;","import React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nexport function ControlBar_1(props) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Btn />\r\n      <div className=\"delimeter\"></div>\r\n      {/* <Btn1 /> */}\r\n      <Btn2 />\r\n      <CutSquareBrackets {...props} />\r\n      <BtnReplace {...props} />\r\n      <div className=\"delimeter\"></div>\r\n      <BtnClearAll {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => { alert('Переход на этап 2') }} className=\"btn\">На второй шаг</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnClearAll(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearAll = () => {\r\n    dispatch({\r\n      type: \"clearAll\",\r\n      payload: props.part\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={clearAll} className=\"btn\">Очистить всё</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CutSquareBrackets(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => {\r\n        dispatch({\r\n          type: \"cutSquareBrackets\",\r\n          payload: props.part\r\n        })\r\n      }} className=\"btn\">[*]</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnReplace(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [open, toggleOpen] = useState(false)\r\n  const [from, setFrom] = useState('')\r\n  const [to, setTo] = useState('')\r\n\r\n  const changeFrom = (e) => {\r\n    setFrom(e.target.value)\r\n  }\r\n\r\n  const changeTo = (e) => {\r\n    setTo(e.target.value)\r\n  }\r\n\r\n  const replace = () => {\r\n    dispatch({\r\n      type: 'replace',\r\n      payload: {\r\n        part_index: props.part,\r\n        from,\r\n        to\r\n      }\r\n    })\r\n    const cells = document.querySelectorAll('.cell-input')\r\n    cells.forEach(c => {\r\n      c.classList.remove('find-word')\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      const cells = document.querySelectorAll('.cell-input')\r\n      cells.forEach(c => {\r\n        if (c.value.indexOf(from) >= 0) {\r\n          c.classList.add('find-word')\r\n        }\r\n        else {\r\n          c.classList.remove('find-word')\r\n        }\r\n      })\r\n    }\r\n  }, [from])\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => toggleOpen(!open)} className=\"btn\">{'ABC > XYZ'}</div>\r\n      {open &&\r\n        <div className=\"replace-form\">\r\n          <label>\r\n            <input placeholder=\"найти\" onChange={changeFrom} type=\"text\" value={from} />\r\n          </label>\r\n          <label>\r\n            <input placeholder=\"и заменить\" onChange={changeTo} type=\"text\" value={to} />\r\n          </label>\r\n          <div onClick={replace} className=\"btn mr5\">Заменить</div>\r\n          <div onClick={() => toggleOpen(false)} className=\"btn\">\r\n            <i className=\"bi bi-x-lg\"></i>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn1(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'walletCount',\r\n        value: state.walletCount + n\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? 'Кол-во объявлений' : 'Закрыть'}\r\n        {!menu && <span className=\"badge\">{state.walletCount}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div onClick={() => change(1)} className=\"btn icon\"><i className=\"bi bi-plus\"></i></div>\r\n          <span className=\"wallet-count\" style={{ fontSize: '1.5rem', margin: '5px', display: 'block' }}>{state.walletCount}</span>\r\n          <div onClick={() => change(-1)} className=\"btn icon\"><i className=\"bi bi-dash\"></i></div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn2(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n  const [submenu, openSubmenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    if (menu) {\r\n      openSubmenu(false)\r\n    }\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'method',\r\n        value: n\r\n      }\r\n    })\r\n    toggleMenu();\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? state.method : 'Закрыть'}\r\n        {false && <span className=\"badge\">{state.method}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div\r\n            onClick={() => openSubmenu('STAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'STAG' && 'changed'}`}>STAG</div>\r\n          {submenu === 'STAG' &&\r\n            <div className=\"sidebar-submenu\">\r\n              <div onClick={() => change('STAG <20')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">{'<20'}</div>\r\n              <div onClick={() => change('STAG 20+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">20+</div>\r\n              <div onClick={() => change('STAG 100+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">100+</div>\r\n              <div onClick={() => change('STAG 500+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">500+</div>\r\n              <div onClick={() => change('STAG 1000+')} style={{ fontSize: '1rem', width: '100%' }} className=\"btn\">1000+</div>\r\n            </div>\r\n          }\r\n          <div\r\n            onClick={() => change('SKAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'SKAG' && 'changed'}`}>SKAG</div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","\r\n\r\nexport function FAQ() {\r\n  return (\r\n    <ul className=\"faq part\">\r\n      <li>Для распространения значения ячейки в столбце, выделите нужную ячейку и, удерживая ЛКМ, двигайтесь вверхи или вниз</li>\r\n      <li>Кнопка \"Очистить всё\" полностью очищает текущую таблицу </li>\r\n    </ul>\r\n  )\r\n}","import { useReducer, createContext, useState, useEffect } from 'react';\nimport './App.scss';\n// Components\nimport { Table } from './c/table';\nimport TableClass from './c/tableClass';\nimport { ControlBar_1 } from './c/controlbar_1';\nimport { FAQ } from './c/faq';\n\nfunction reducer(state, action) {\n  const [type, pay] = [action.type, action.payload]\n  const pos = pay ? pay.position : null\n  const table = pos ? state.company[pos.p].table : null\n\n  switch (type) {\n    case 'copyFromClipboard':\n      const { part, col } = { ...action.payload };\n      let data = action.payload.data.split('\\r\\n');\n      for (let i = 0; i < data.length; i++) {\n        state.company[part].table.setCol(col, data)\n        if (part == 0 && col == 1 && state.company[part].table.getCell(+col + 1, i).data === \"\") { // Если название компании в строке пустое, копируем из групп\n          state.company[part].table.setCell(+col + 1, i, data[i])\n        }\n      }\n      return { ...state }\n\n    case 'toggleRowDisable':\n      const { p, x, y } = { ...action.payload.position }\n      if (state.company[p] !== undefined) {\n        state.company[p].table.toggleRowDisable(y, action.payload.value);\n      }\n      return { ...state }\n\n    case 'updateOption':\n      state[pay.key] = pay.value;\n      return { ...state }\n\n    case \"selectingCell\":\n      state.company[pay.position.p].table.setSelectedCell(pay.value ? pay.position : null)\n      return { ...state }\n\n    case \"copyModOff\":\n      state.company.forEach((t) => {\n        t.table.setSelectedCell(null)\n      })\n      return { ...state }\n\n    case \"setCell\":\n      table.setCell(pos.x, pos.y, pay.value)\n      return { ...state }\n\n    case \"clearCol\":\n      state.company[pay.part].table.clearCol(pay.col)\n      return { ...state }\n\n    case \"clearAll\":\n      state.company[pay].table.clearAll()\n      return { ...state }\n\n    case \"sortColumn\":\n      state.company[pay.part_index].table.sortColumn(pay.col_index, pay.sort_title)\n      return { ...state }\n\n    case \"cutSquareBrackets\":\n      state.company[pay].table.cut_square_brackets()\n      return { ...state }\n\n    case \"replace\":\n      state.company[pay.part_index].table.replace(pay.from, pay.to)\n      return { ...state }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport let AppContext = createContext(null);\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, {\n    // OPTIONS\n    walletCount: 3,\n    method: \"STAG\",\n    // PARTs\n    company: [\n      {\n        table: new TableClass(5).init()\n      },\n      {\n        table: new TableClass(5).init()\n      }\n    ],\n  })\n\n  const [init, setInit] = useState(false)\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', (e) => {\n      dispatch({\n        type: \"copyModOff\"\n      })\n    })\n    document.body.addEventListener(\"click\", () => {\n      const openMenus = document.querySelectorAll(\".options.open\")\n      openMenus.forEach((om) => {\n        om.classList.remove('open')\n      })\n    })\n    setInit(true)\n  }, [init])\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"part\">\n        <Table />\n        <ControlBar_1 part=\"0\" />\n      </div>\n      <FAQ />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}