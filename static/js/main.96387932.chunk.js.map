{"version":3,"sources":["c/cell.jsx","c/column.jsx","c/table.jsx","c/tableClass.js","c/controlbar_1.jsx","c/faq.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Cell","props","useContext","AppContext","state","dispatch","d","data","options","disabled","useState","selected","selecting","e","val","type","payload","node","target","closest","position","value","CellOptions","className","onMouseDown","onMouseUp","onMouseMove","SC","company","p","table","selectedCell","SCvalue","getCell","x","y","onChange","onClick","part","col","ActionOption","icon","beforeOptions","children","Col","colOptions","useRef","undefined","rows","map","c","ind","width","title","ref","stopPropagation","document","querySelectorAll","forEach","m","classList","remove","current","contains","add","Menu","insertFromCP","a","navigator","clipboard","readText","text","change","cb","alert","class","Table","TableClass","n","this","colsCount","length","push","newRow","i","setCell","cell","r","newCell","row","ControlBar_1","Btn","Btn2","BtnClearAll","menu","openMenu","submenu","openSubmenu","toggleMenu","key","method","style","fontSize","marginBottom","FAQ","reducer","action","pay","pos","split","setCol","toggleRowDisable","setSelectedCell","t","clearCol","clearAll","Error","createContext","App","useReducer","walletCount","init","setInit","useEffect","body","addEventListener","om","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96387932.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\"\r\nimport { AppContext } from \"../App\"\r\n\r\nexport function Cell(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const d = props.data.options.disabled\r\n  const [selected, setSelected] = useState(false)\r\n\r\n  const change = (e) => {\r\n    const val = e.target.value;\r\n    dispatch({\r\n      type: \"setCell\",\r\n      payload: {\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const selecting = (e, val) => {\r\n    dispatch({\r\n      type: \"selectingCell\",\r\n      payload: {\r\n        node: e.target.closest('.cell-wrapper'),\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const copy = () => {\r\n    const SC = state.company[props.position.p].table.selectedCell\r\n    if (SC) {\r\n      const SCvalue = state.company[props.position.p].table.getCell(SC.x, SC.y)\r\n      if (SC.x === props.position.x) { // только в своей колонке\r\n        dispatch({\r\n          type: \"setCell\",\r\n          payload: {\r\n            position: props.position,\r\n            value: SCvalue.data\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CellOptions {...props} d={d}>\r\n      <label\r\n        className=\"cell\"\r\n        onMouseDown={(e) => selecting(e, true)}\r\n        onMouseUp={(e) => selecting(e, false)}\r\n        onMouseMove={copy}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"cell-input\"\r\n          value={props.data.data}\r\n          onChange={change}\r\n          disabled={d} />\r\n        {selected && <div className=\"selected-marker\" onClick={(e) => null}></div>}\r\n      </label>\r\n    </CellOptions>\r\n  )\r\n}\r\n\r\nfunction CellOptions(props) {\r\n\r\n  const beforeOptions = () => {\r\n    if (props.part === \"0\" && props.col === \"0\") {\r\n      return <ActionOption {...props} icon=\"bi bi-eye\" />\r\n    }\r\n  }\r\n\r\n  const afterOptions = () => {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cell-wrapper\" disabled={props.d}>\r\n      <div className=\"before\">{beforeOptions()}</div>\r\n      {props.children}\r\n      <div className=\"after\">{afterOptions()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ActionOption(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const action = () => {\r\n    dispatch({\r\n      type: 'toggleRowDisable',\r\n      payload: { position: props.position, value: props.d }\r\n    })\r\n  }\r\n\r\n  return (<i onClick={action} className={props.icon}></i>)\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { Cell } from \"./cell\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function Col(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const [menuStatus, setMenuStatus] = useState(false)\r\n  const colOptions = useRef(null);\r\n  let col = 'нет данных';\r\n\r\n  if (state.company[props.part] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (state.company[+props.part].table !== undefined) {\r\n    col = state.company[+props.part].table.rows.map((c, ind) => {\r\n      return <Cell\r\n        key={ind}\r\n        {...props}\r\n        data={c[props.col]}\r\n        position={{ p: props.part, x: props.col, y: ind }} />\r\n    })\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation()\r\n    document.querySelectorAll(\".options.open\").forEach((m) => {\r\n      m.classList.remove(\"open\")\r\n    })\r\n    if (colOptions.current.classList.contains('open')) {\r\n      colOptions.current.classList.remove('open')\r\n    }\r\n    else {\r\n      colOptions.current.classList.add('open')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div width={props.width} className=\"col-wrapper\">\r\n      <div className=\"th\">\r\n        <span>{props.title}</span>\r\n        <div className=\"options\" ref={colOptions} onClick={onClick}>\r\n          <i className=\"bi-three-dots-vertical\"></i>\r\n          <Menu {...props} />\r\n        </div>\r\n      </div>\r\n      {col}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Menu(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n\r\n  const insertFromCP = async () => {\r\n    let text = await navigator.clipboard.readText();\r\n    dispatch({\r\n      type: 'copyFromClipboard',\r\n      payload: {\r\n        part: props.part,\r\n        col: props.col,\r\n        data: text\r\n      }\r\n    });\r\n  }\r\n\r\n  const change = (e, cb) => {\r\n    e.stopPropagation()\r\n    e.target.closest('.options.open').classList.remove('open')\r\n    cb();\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, insertFromCP)}>\r\n        <i className=\"bi bi-clipboard-plus\"></i>\r\n        <span>Вставить из буфера</span>\r\n      </div>\r\n\r\n      <div className=\"menu-item\" onClick={() => alert('здесь будет сортировка')}>\r\n        <i className=\"bi bi-funnel\"></i>\r\n        <span>Сортировать</span>\r\n      </div>\r\n\r\n      <div className=\"delimeter\"></div>\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, () => dispatch({\r\n        type: \"clearCol\",\r\n        payload: {\r\n          part: props.part,\r\n          col: props.col\r\n        },\r\n      }))}>\r\n        <i class=\"bi bi-x-octagon\"></i>\r\n        <span>Очистить колонку</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\"\r\nimport { Col } from \"./column\";\r\n\r\nexport function Table(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <Col width=\"100\" part=\"0\" col=\"0\" title=\"Ключевые фразы\" />\r\n      <Col width=\"100\" part=\"0\" col=\"1\" title=\"Группы ключевых слов\" />\r\n      <Col width=\"100\" part=\"0\" col=\"2\" title=\"Название компаний\" />\r\n      <Col width=\"50\" part=\"0\" col=\"3\" title=\"YW\" />\r\n      <Col width=\"50\" part=\"0\" col=\"4\" title='\"YW\"' />\r\n    </div>\r\n  )\r\n}","class TableClass {\r\n    constructor(n) {\r\n        this.colsCount = n\r\n        this.selectedCell = null\r\n        this.rows = []\r\n    }\r\n\r\n    setCell(x, y, data) {\r\n        while (this.rows.length <= y) {\r\n            this.rows.push(this.newRow());\r\n        }\r\n        if (this.rows[y] !== undefined && this.rows[y][x] !== undefined) {\r\n            this.rows[+y][+x].data = data;\r\n        }\r\n    }\r\n\r\n    getCell(x, y) {\r\n        return this.rows[y][x]\r\n    }\r\n\r\n    setCol(x, data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.setCell(x, i, data[i]);\r\n        };\r\n        return this.rows;\r\n    }\r\n\r\n    getRow(y) {\r\n        return this.rows[y];\r\n    }\r\n\r\n    toggleRowDisable(y, value) {\r\n        this.rows[y].forEach((cell) => {\r\n            cell.options.disabled = !value;\r\n        })\r\n        return this.rows;\r\n    }\r\n\r\n    newCell() {\r\n        return {\r\n            data: '',\r\n            options: {\r\n                disabled: false\r\n            }\r\n        }\r\n    }\r\n\r\n    newRow() {\r\n        let r = [];\r\n        for (let n = 0; n < this.colsCount; n++) {\r\n            r.push(this.newCell());\r\n        }\r\n        return r;\r\n    }\r\n\r\n    setSelectedCell(val) {\r\n        this.selectedCell = val\r\n    }\r\n\r\n    clearCol(col) {\r\n        this.rows.forEach((row) => {\r\n            row[col].data = \"\"\r\n        })\r\n    }\r\n\r\n    clearAll() {\r\n        this.rows.forEach(r => {\r\n            r.forEach(c => {\r\n                c.data = \"\"\r\n            })\r\n        })\r\n    }\r\n\r\n    init() {\r\n        // add rows to table\r\n        for (let i = 0; i < 10; i++) {\r\n            this.rows.push(this.newRow());\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default TableClass;","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nexport function ControlBar_1(props) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Btn />\r\n      <div className=\"delimeter\"></div>\r\n      {/* <Btn1 /> */}\r\n      <Btn2 />\r\n      <div className=\"delimeter\"></div>\r\n      <BtnClearAll {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => { alert('Переход на этап 2') }} className=\"btn\">На второй шаг</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnClearAll(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearAll = () => {\r\n    dispatch({\r\n      type: \"clearAll\",\r\n      payload: props.part\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={clearAll} className=\"btn\">Очистить всё</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn1(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'walletCount',\r\n        value: state.walletCount + n\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? 'Кол-во объявлений' : 'Закрыть'}\r\n        {!menu && <span className=\"badge\">{state.walletCount}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div onClick={() => change(1)} className=\"btn icon\"><i className=\"bi bi-plus\"></i></div>\r\n          <span className=\"wallet-count\" style={{ fontSize: '1.5rem', margin: '5px', display: 'block' }}>{state.walletCount}</span>\r\n          <div onClick={() => change(-1)} className=\"btn icon\"><i className=\"bi bi-dash\"></i></div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn2(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n  const [submenu, openSubmenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    if (menu) {\r\n      openSubmenu(false)\r\n    }\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'method',\r\n        value: n\r\n      }\r\n    })\r\n    toggleMenu();\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? state.method : 'Закрыть'}\r\n        {false && <span className=\"badge\">{state.method}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div\r\n            onClick={() => openSubmenu('STAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'STAG' && 'changed'}`}>STAG</div>\r\n          {submenu === 'STAG' &&\r\n            <div className=\"sidebar-submenu\">\r\n              <div onClick={() => change('STAG <20')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">{'<20'}</div>\r\n              <div onClick={() => change('STAG 20+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">20+</div>\r\n              <div onClick={() => change('STAG 100+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">100+</div>\r\n              <div onClick={() => change('STAG 500+')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">500+</div>\r\n              <div onClick={() => change('STAG 1000+')} style={{ fontSize: '1rem', width: '100%' }} className=\"btn\">1000+</div>\r\n            </div>\r\n          }\r\n          <div\r\n            onClick={() => change('SKAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'SKAG' && 'changed'}`}>SKAG</div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","\r\n\r\nexport function FAQ() {\r\n  return (\r\n    <ul className=\"faq part\">\r\n      <li>Для распространения значения ячейки в столбце, выделите нужную ячейку и, удерживая ЛКМ, двигайтесь вверхи или вниз</li>\r\n      <li>Кнопка \"Очистить всё\" полностью очищает текущую таблицу </li>\r\n    </ul>\r\n  )\r\n}","import { useReducer, createContext, useState, useEffect } from 'react';\nimport './App.scss';\n// Components\nimport { Table } from './c/table';\nimport TableClass from './c/tableClass';\nimport { ControlBar_1 } from './c/controlbar_1';\nimport { FAQ } from './c/faq';\n\nfunction reducer(state, action) {\n  const [type, pay] = [action.type, action.payload]\n  const pos = pay ? pay.position : null\n  const table = pos ? state.company[pos.p].table : null\n\n  switch (type) {\n    case 'copyFromClipboard':\n      const { part, col } = { ...action.payload };\n      let data = action.payload.data.split('\\r\\n');\n      for (let i = 0; i < data.length; i++) {\n        state.company[part].table.setCol(col, data)\n        if (part == 0 && col == 1 && state.company[part].table.getCell(+col + 1, i).data === \"\") { // Если название компании в строке пустое, копируем из групп\n          state.company[part].table.setCell(+col + 1, i, data[i])\n        }\n      }\n      return { ...state }\n\n    case 'toggleRowDisable':\n      const { p, x, y } = { ...action.payload.position }\n      if (state.company[p] !== undefined) {\n        state.company[p].table.toggleRowDisable(y, action.payload.value);\n      }\n      return { ...state }\n\n    case 'updateOption':\n      state[pay.key] = pay.value;\n      return { ...state }\n\n    case \"selectingCell\":\n      state.company[pay.position.p].table.setSelectedCell(pay.value ? pay.position : null)\n      return { ...state }\n\n    case \"copyModOff\":\n      state.company.forEach((t) => {\n        t.table.setSelectedCell(null)\n      })\n      return { ...state }\n\n    case \"setCell\":\n      table.setCell(pos.x, pos.y, pay.value)\n      return { ...state }\n\n    case \"clearCol\":\n      state.company[pay.part].table.clearCol(pay.col)\n      return { ...state }\n\n    case \"clearAll\":\n      state.company[pay].table.clearAll();\n      return { ...state }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport let AppContext = createContext(null);\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, {\n    // OPTIONS\n    walletCount: 3,\n    method: \"STAG\",\n    // PARTs\n    company: [\n      {\n        table: new TableClass(5).init()\n      },\n      {\n        table: new TableClass(5).init()\n      }\n    ],\n  })\n\n  const [init, setInit] = useState(false)\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', (e) => {\n      dispatch({\n        type: \"copyModOff\"\n      })\n    })\n    document.body.addEventListener(\"click\", () => {\n      const openMenus = document.querySelectorAll(\".options.open\")\n      openMenus.forEach((om) => {\n        om.classList.remove('open')\n      })\n    })\n    setInit(true)\n  }, [init])\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"part\">\n        <Table />\n        <ControlBar_1 part=\"0\" />\n      </div>\n      <FAQ />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}