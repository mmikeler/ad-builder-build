{"version":3,"sources":["c/cell.jsx","c/column.jsx","c/table.jsx","c/tableClass.js","c/controlbar_1.jsx","c/faq.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Cell","props","useContext","AppContext","state","dispatch","d","data","options","disabled","useState","value","setValue","selected","spellcheckerError","spellcheckerErrorArray","selecting","e","val","type","payload","node","target","closest","position","getFrequency","n","MPval","method","split","undefined","useEffect","p","x","console","log","part_ind","row_ind","y","CellOptions","className","onMouseDown","onMouseUp","onMouseMove","SC","company","table","selectedCell","SCvalue","getCell","SpellcheckerErrorIndicator","onBlur","spellcheck","word","fetch","then","res","json","onChange","onClick","length","class","part","col","ActionOption","icon","beforeOptions","children","Col","colOptions","useRef","rows","map","c","ind","cells","width","title","ref","stopPropagation","document","querySelectorAll","forEach","m","classList","remove","current","contains","add","Menu","insertFromCP","a","navigator","clipboard","readText","text","change","cb","changeSort","sort","part_index","col_index","sort_title","Table","TableClass","this","colsCount","partIndex","colIndexesToReplace","push","newRow","i","setCell","row","cell","r","frequency","newCell","b","strA","toLowerCase","strB","Error","replace","from","to","colIndex","rowInd","ControlBar_1","Btn","Btn2","CutSquareBrackets","BtnReplace","Btn3","BtnClearAll","alert","open","toggleOpen","setFrom","setTo","indexOf","placeholder","bar","colChangerBar","menu","openMenu","submenu","openSubmenu","toggleMenu","key","style","fontSize","marginBottom","quotable","FAQ","reducer","action","pay","pos","setCol","toggleRowDisable","window","o","unquotable","setSelectedCell","t","clearCol","clearAll","sortColumn","cut_square_brackets","changeColFromReplaceBar","updateFrequency","createContext","App","useReducer","walletCount","init","setInit","body","addEventListener","om","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQAKO,SAASA,EAAKC,GAAQ,IAAD,EACEC,qBAAWC,GAA/BC,EADkB,EAClBA,MAAOC,EADW,EACXA,SACTC,EAAIL,EAAMM,KAAKC,QAAQC,SAFH,EAGAC,mBAAS,IAHT,mBAGnBC,EAHmB,KAGZC,EAHY,OAIMF,oBAAS,GAJf,mBAInBG,EAJmB,aAK0BH,mBAAS,KALnC,mBAKnBI,EALmB,KAKAC,EALA,KAmBpBC,EAAY,SAACC,EAAGC,GACpBb,EAAS,CACPc,KAAM,gBACNC,QAAS,CACPC,KAAMJ,EAAEK,OAAOC,QAAQ,iBACvBC,SAAUvB,EAAMuB,SAChBb,MAAOO,MAgCPO,EAAe,SAACC,GACpB,IAAMC,EAAQvB,EAAMwB,OAAOC,MAAM,KAAK,GAGtC,OAAIH,EAAI,IAAa,qBACZA,EAAI,IAAa,eACjBA,EAAI,IAAY,eAChBA,QALYI,IAAVH,EAAsBA,EAAQ,GAKjB,eACZ,KAkBd,OAfAI,qBAAU,WAEkB,KAArB9B,EAAMuB,SAASQ,GAAiC,KAArB/B,EAAMuB,SAASS,IAC7CC,QAAQC,IAAIV,GAAcd,IAC1BN,EAAS,CACPc,KAAM,kBACNC,QAAS,CACPgB,SAAUnC,EAAMuB,SAASQ,EACzBK,QAASpC,EAAMuB,SAASc,EACxB3B,MAAOc,GAAcd,SAI1B,CAACA,IAGF,cAAC4B,EAAD,2BAAiBtC,GAAjB,IAAwBK,EAAGA,EAA3B,SACE,wBACEkC,UAAU,OACVC,YAAa,SAACxB,GAAD,OAAOD,EAAUC,GAAG,IACjCyB,UAAW,SAACzB,GAAD,OAAOD,EAAUC,GAAG,IAC/B0B,YA3DO,WACX,IAAMC,EAAKxC,EAAMyC,QAAQ5C,EAAMuB,SAASQ,GAAGc,MAAMC,aACjD,GAAIH,EAAI,CACN,IAAMI,EAAU5C,EAAMyC,QAAQ5C,EAAMuB,SAASQ,GAAGc,MAAMG,QAAQL,EAAGX,EAAGW,EAAGN,GACnEM,EAAGX,IAAMhC,EAAMuB,SAASS,GAC1B5B,EAAS,CACPc,KAAM,UACNC,QAAS,CACPI,SAAUvB,EAAMuB,SAChBb,MAAOqC,EAAQzC,UA8CrB,UAME,cAAC2C,EAAD,CAA4B5C,EAAGQ,IAE/B,uBACEK,KAAMlB,EAAMkB,KACZgC,OAjDW,SAAClC,GAClB,GAAIhB,EAAMmD,WAAY,CACpB,IAAMC,EAAOpC,EAAEK,OAAOX,MACtB2C,MAAM,wEAA0ED,GAC7EE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJzC,EAAuByC,QA4CvBhB,UAAU,aACV7B,MAAOV,EAAMM,KAAKA,KAClBmD,SA3FO,SAACzC,GACd,IAAMC,EAAMD,EAAEK,OAAOX,MACrBC,EAASM,GACTb,EAAS,CACPc,KAAM,UACNC,QAAS,CACPI,SAAUvB,EAAMuB,SAChBb,MAAOO,MAqFLT,SAAUH,IACXO,GAAY,qBAAK2B,UAAU,kBAAkBmB,QAAS,SAAC1C,GAAD,OAAO,cAMtE,SAASiC,EAA2BjD,GAClC,OAAuB,IAAnBA,EAAMK,EAAEsD,OAAqB,KAG7B,qBAAKpB,UAAU,+BAAf,SACE,mBAAGqB,MAAM,6BAMjB,SAAStB,EAAYtC,GAYnB,OACE,sBAAKuC,UAAU,eAAe/B,SAAUR,EAAMK,EAA9C,UACE,qBAAKkC,UAAU,SAAf,SAZkB,WACpB,GAAmB,MAAfvC,EAAM6D,MAA8B,MAAd7D,EAAM8D,IAC9B,OAAO,cAACC,EAAD,2BAAkB/D,GAAlB,IAAyBgE,KAAK,eAUZC,KACxBjE,EAAMkE,SACP,qBAAK3B,UAAU,QAAf,SAPK,UAYX,SAASwB,EAAa/D,GAAQ,IAAD,EAECC,qBAAWC,GAAxBE,GAFY,EAEnBD,MAFmB,EAEZC,UASf,OAAQ,mBAAGsD,QAPI,WACbtD,EAAS,CACPc,KAAM,mBACNC,QAAS,CAAEI,SAAUvB,EAAMuB,SAAUb,MAAOV,EAAMK,MAI1BkC,UAAWvC,EAAMgE,O,MCnJxC,SAASG,EAAInE,GAAQ,IAAD,EACGC,qBAAWC,GAA/BC,EADiB,EACjBA,MADiB,KACVC,SACqBK,oBAAS,IAFpB,mBAGnB2D,GAHmB,UAGNC,iBAAO,OACtBP,EAAM,0DAEV,QAAkCjC,IAA9B1B,EAAMyC,QAAQ5C,EAAM6D,MACtB,OAAO,UAGgChC,IAArC1B,EAAMyC,SAAS5C,EAAM6D,MAAMhB,QAC7BiB,EAAM3D,EAAMyC,SAAS5C,EAAM6D,MAAMhB,MAAMyB,KAAKC,KAAI,SAACC,EAAGC,GAClD,OAAO,cAAC1E,EAAD,yBACLoD,WAAYnD,EAAMmD,WAClBjC,KAAMlB,EAAMkB,MAERlB,GAJC,IAKLM,KAAMkE,EAAEE,MAAM1E,EAAM8D,KACpBvC,SAAU,CAAEQ,EAAG/B,EAAM6D,KAAM7B,EAAGhC,EAAM8D,IAAKzB,EAAGoC,KAHvCA,OAoBX,OACE,sBAAKE,MAAO3E,EAAM2E,MAAOpC,UAAU,cAAnC,UACE,sBAAKA,UAAU,KAAf,UACE,+BAAOvC,EAAM4E,QACb,sBAAKrC,UAAU,UAAUsC,IAAKT,EAAYV,QAjBhC,SAAC1C,GACfA,EAAE8D,kBACFC,SAASC,iBAAiB,iBAAiBC,SAAQ,SAACC,GAClDA,EAAEC,UAAUC,OAAO,WAEjBhB,EAAWiB,QAAQF,UAAUG,SAAS,QACxClB,EAAWiB,QAAQF,UAAUC,OAAO,QAGpChB,EAAWiB,QAAQF,UAAUI,IAAI,SAQ/B,UACE,mBAAGhD,UAAU,2BACb,cAACiD,EAAD,eAAUxF,UAGb8D,KAKP,SAAS0B,EAAKxF,GAAQ,IAAD,EACSC,qBAAWC,GAAxBE,GADI,EACXD,MADW,EACJC,UAETqF,EAAY,uCAAG,4BAAAC,EAAA,sEACFC,UAAUC,UAAUC,WADlB,OACfC,EADe,OAEnB1F,EAAS,CACPc,KAAM,oBACNC,QAAS,CACP0C,KAAM7D,EAAM6D,KACZC,IAAK9D,EAAM8D,IACXxD,KAAMwF,KAPS,2CAAH,qDAYZC,EAAS,SAAC/E,EAAGgF,GACjBhF,EAAE8D,kBACF9D,EAAEK,OAAOC,QAAQ,iBAAiB6D,UAAUC,OAAO,QACnDY,KAGIC,EAAa,SAACC,GAClB9F,EAAS,CACPc,KAAM,aACNC,QAAS,CACPgF,WAAYnG,EAAM6D,KAClBuC,UAAWpG,EAAM8D,IACjBuC,WAAYH,MAKlB,OACE,sBAAK3D,UAAU,OAAf,UAEE,sBAAKA,UAAU,YAAYmB,QAAS,SAAC1C,GAAD,OAAO+E,EAAO/E,EAAGyE,IAArD,UACE,mBAAGlD,UAAU,yBACb,yIAGF,sBAAKA,UAAU,yBAAf,UACE,mBAAGA,UAAU,iBACb,sGAEA,sBAAKA,UAAU,gBAAf,UACE,qBAAKmB,QAAS,kBAAMuC,EAAW,kBAAkB1D,UAAU,YAA3D,SAAuE,+BAAO,QAC9E,qBAAKmB,QAAS,kBAAMuC,EAAW,kBAAkB1D,UAAU,YAA3D,SAAuE,+BAAO,QAC9E,qBAAKmB,QAAS,kBAAMuC,EAAW,uBAAuB1D,UAAU,YAAhE,SAA4E,mDAC5E,qBAAKmB,QAAS,kBAAMuC,EAAW,uBAAuB1D,UAAU,YAAhE,SAA4E,yDAKhF,qBAAKA,UAAU,cAEf,sBAAKA,UAAU,YAAYmB,QAAS,SAAC1C,GAAD,OAAO+E,EAAO/E,GAAG,kBAAMZ,EAAS,CAClEc,KAAM,WACNC,QAAS,CACP0C,KAAM7D,EAAM6D,KACZC,IAAK9D,EAAM8D,WAJf,UAOE,mBAAGF,MAAM,oBACT,qICnHD,SAAS0C,EAAMtG,GAAQ,IAAD,EACCC,qBAAWC,GADZ,EACnBC,MADmB,EACZC,SAEf,OACE,sBAAKmC,UAAU,QAAf,UACE,cAAC4B,EAAD,CAAKjD,KAAK,OAAOiC,YAAY,EAAMwB,MAAM,MAAMd,KAAK,IAAIC,IAAI,IAAIc,MAAM,oFACtE,cAACT,EAAD,CAAKjD,KAAK,OAAOiC,YAAY,EAAMwB,MAAM,MAAMd,KAAK,IAAIC,IAAI,IAAIc,MAAM,mHACtE,cAACT,EAAD,CAAKjD,KAAK,OAAOiC,YAAY,EAAMwB,MAAM,MAAMd,KAAK,IAAIC,IAAI,IAAIc,MAAM,sGACtE,cAACT,EAAD,CAAKjD,KAAK,SAASiC,YAAY,EAAOwB,MAAM,KAAKd,KAAK,IAAIC,IAAI,IAAIc,MAAM,OACxE,cAACT,EAAD,CAAKjD,KAAK,SAASiC,YAAY,EAAOwB,MAAM,KAAKd,KAAK,IAAIC,IAAI,IAAIc,MAAM,Y,kBC2K/D2B,E,WAvLb,WAAY9E,EAAGM,GAAI,oBACjByE,KAAKC,UAAYhF,EACjB+E,KAAKE,UAAY3E,EACjByE,KAAK1D,aAAe,KACpB0D,KAAKlC,KAAO,GACZkC,KAAKG,oBAAsB,G,2CAG7B,SAAQ3E,EAAGK,EAAG/B,GACZ,KAAOkG,KAAKlC,KAAKX,QAAUtB,GACzBmE,KAAKlC,KAAKsC,KAAKJ,KAAKK,eAEDhF,IAAjB2E,KAAKlC,KAAKjC,SAA8CR,IAA1B2E,KAAKlC,KAAKjC,GAAGqC,MAAM1C,KACnDwE,KAAKlC,MAAMjC,GAAGqC,OAAO1C,GAAG1B,KAAOA,K,qBAInC,SAAQ0B,EAAGK,GACT,OAAOmE,KAAKlC,KAAKjC,GAAGqC,MAAM1C,K,oBAG5B,SAAOA,EAAG1B,GACR,IAAK,IAAIwG,EAAI,EAAGA,EAAIxG,EAAKqD,OAAQmD,IAC/BN,KAAKO,QAAQ/E,EAAG8E,EAAGxG,EAAKwG,IAE1B,OAAON,KAAKlC,O,oBAGd,SAAOjC,GACL,OAAOmE,KAAKlC,KAAKjC,K,oBAGnB,SAAO+D,GACL,IAAItC,EAAM,GAIV,OAHA0C,KAAKlC,KAAKW,SAAQ,SAAC+B,GACjBlD,EAAI8C,KAAKI,EAAItC,MAAM0B,OAEdtC,I,8BAGT,SAAiBzB,EAAG3B,GAIlB,OAHA8F,KAAKlC,KAAKjC,GAAGqC,MAAMO,SAAQ,SAACgC,GAC1BA,EAAK1G,QAAQC,UAAYE,KAEpB8F,KAAKlC,O,qBAGd,WACE,MAAO,CACLhE,KAAM,GACNC,QAAS,CACPC,UAAU,M,oBAKhB,WAKE,IAJA,IAAI0G,EAAI,CACNC,UAAW,GACXzC,MAAO,IAEAjD,EAAI,EAAGA,EAAI+E,KAAKC,UAAWhF,IAClCyF,EAAExC,MAAMkC,KAAKJ,KAAKY,WAEpB,OAAOF,I,6BAGT,SAAgBjG,GACduF,KAAK1D,aAAe7B,I,sBAGtB,SAAS6C,GACP0C,KAAKlC,KAAKW,SAAQ,SAAC+B,GACjBA,EAAItC,MAAMZ,GAAKxD,KAAO,Q,sBAI1B,WACEkG,KAAKlC,KAAKW,SAAQ,SAAAiC,GAChBA,EAAExC,MAAMO,SAAQ,SAAAT,GACdA,EAAElE,KAAO,W,wBAKf,SAAW8F,EAAWC,GACpB,OAAQA,GAEN,IAAK,gBAIH,YAHAG,KAAKlC,KAAK4B,MAAK,SAACR,EAAG2B,GACjB,OAAO3B,EAAEhB,MAAM0B,GAAW9F,KAAO+G,EAAE3C,MAAM0B,GAAW9F,QAIxD,IAAK,gBAIH,YAHAkG,KAAKlC,KAAK4B,MAAK,SAACR,EAAG2B,GACjB,OAAOA,EAAE3C,MAAM0B,GAAW9F,KAAOoF,EAAEhB,MAAM0B,GAAW9F,QAIxD,IAAK,qBAQH,YAPAkG,KAAKlC,KAAK4B,MAAK,SAACR,EAAG2B,GACjB,IAAMC,EAAO5B,EAAEhB,MAAM0B,GAAW9F,KAAKiH,cACnCC,EAAOH,EAAE3C,MAAM0B,GAAW9F,KAAKiH,cACjC,OAAID,EAAOE,GAAc,EACrBF,EAAOE,EAAa,EACjB,KAIX,IAAK,qBAQH,YAPAhB,KAAKlC,KAAK4B,MAAK,SAACR,EAAG2B,GACjB,IAAMC,EAAO5B,EAAEhB,MAAM0B,GAAW9F,KAAKiH,cACnCC,EAAOH,EAAE3C,MAAM0B,GAAW9F,KAAKiH,cACjC,OAAIC,EAAOF,GAAc,EACrBE,EAAOF,EAAa,EACjB,KAIX,QACE,MAAM,IAAIG,S,iCAIhB,WACEjB,KAAKlC,KAAKW,SAAQ,SAAA+B,GAChBA,EAAItC,MAAMO,SAAQ,SAAAgC,GAChBA,EAAK3G,KAAO2G,EAAK3G,KAAKoH,QAAQ,WAAY,Y,qBAKhD,SAAQC,EAAMC,GAAK,IAAD,OAChBpB,KAAKlC,KAAKW,SAAQ,SAAA+B,GAChBA,EAAItC,MAAMO,SAAQ,SAACgC,EAAMxC,GACnB,EAAKkC,oBAAoBlC,KAC3BwC,EAAK3G,KAAO2G,EAAK3G,KAAKoH,QAAQC,EAAMC,Y,qCAM5C,SAAwBC,EAAUnH,GAChC8F,KAAKG,oBAAoBkB,IAAanH,I,6BAGxC,SAAgBoH,EAAQ7G,GACtBuF,KAAKlC,KAAKwD,GAAQX,UAAYlG,I,sBAGhC,WACEuF,KAAKlC,KAAKW,SAAQ,SAAA+B,GAChBA,EAAItC,MAAMO,SAAQ,SAACgC,EAAMxC,GACX,IAARA,GAAawC,EAAK3G,KAAKqD,OAAS,GAAsB,MAAjBsD,EAAK3G,KAAK,KACjD2G,EAAK3G,KAAO,IAAM2G,EAAK3G,KAAO,a,wBAMtC,WACEkG,KAAKlC,KAAKW,SAAQ,SAAA+B,GAChBA,EAAItC,MAAMO,SAAQ,SAACgC,EAAMxC,GACvBwC,EAAK3G,KAAO2G,EAAK3G,KAAKoH,QAAQ,KAAM,Y,kBAK1C,WAEE,IAAK,IAAIZ,EAAI,EAAGA,EAAI,GAAIA,IACtBN,KAAKlC,KAAKsC,KAAKJ,KAAKK,UAGtB,IAAK,IAAIpF,EAAI,EAAGA,EAAI+E,KAAKC,UAAWhF,IAClC+E,KAAKG,oBAAoBC,MAAK,GAGhC,OAAOJ,S,KChLJ,SAASuB,EAAa/H,GAC3B,OACE,sBAAKuC,UAAU,UAAf,UACE,cAACyF,EAAD,IACA,qBAAKzF,UAAU,cAEf,cAAC0F,EAAD,IACA,cAACC,EAAD,eAAuBlI,IACvB,cAACmI,EAAD,eAAgBnI,IAChB,cAACoI,EAAD,IACA,qBAAK7F,UAAU,cACf,cAAC8F,EAAD,eAAiBrI,OAKvB,SAASgI,EAAIhI,GAAQ,IAAD,EACUC,qBAAWC,GADrB,EACVC,MADU,EACHC,SAEf,OACE,qBAAKmC,UAAU,SAAf,SACE,qBAAKmB,QAAS,WAAQ4E,MAAM,uFAAwB/F,UAAU,MAA9D,oFAKN,SAAS8F,EAAYrI,GAAQ,IAAD,EACEC,qBAAWC,GAAxBE,GADW,EAClBD,MADkB,EACXC,UASf,OACE,qBAAKmC,UAAU,SAAf,SACE,qBAAKmB,QATQ,WACftD,EAAS,CACPc,KAAM,WACNC,QAASnB,EAAM6D,QAMStB,UAAU,MAAlC,mFAKN,SAAS2F,EAAkBlI,GAAQ,IAAD,EACJC,qBAAWC,GAAxBE,GADiB,EACxBD,MADwB,EACjBC,UAEf,OACE,qBAAKmC,UAAU,SAAf,SACE,qBAAKmB,QAAS,WACZtD,EAAS,CACPc,KAAM,oBACNC,QAASnB,EAAM6D,QAEhBtB,UAAU,MALb,mBAUN,SAAS4F,EAAWnI,GAAQ,IAAD,EACGC,qBAAWC,GAA/BC,EADiB,EACjBA,MAAOC,EADU,EACVA,SADU,EAEEK,oBAAS,GAFX,mBAElB8H,EAFkB,KAEZC,EAFY,OAGD/H,mBAAS,IAHR,mBAGlBkH,EAHkB,KAGZc,EAHY,OAILhI,mBAAS,IAJJ,mBAIlBmH,EAJkB,KAIdc,EAJc,KAwEzB,OAdA5G,qBAAU,WACK,KAAT6F,GACY5C,SAASC,iBAAiB,eAClCC,SAAQ,SAAAT,GACRA,EAAE9D,MAAMiI,QAAQhB,IAAS,EAC3BnD,EAAEW,UAAUI,IAAI,aAGhBf,EAAEW,UAAUC,OAAO,kBAIxB,CAACuC,IAGF,sBAAKpF,UAAU,SAAf,UACE,qBAAKmB,QAAS,kBAAM8E,GAAYD,IAAOhG,UAAU,MAAjD,SAAwD,cACvDgG,GACC,sBAAKhG,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,uBAAOqG,YAAY,iCAAQnF,SAzEpB,SAACzC,GAClByH,EAAQzH,EAAEK,OAAOX,QAwE0CQ,KAAK,OAAOR,MAAOiH,MAEtE,gCACE,uBAAOiB,YAAY,0DAAanF,SAxE3B,SAACzC,GAChB0H,EAAM1H,EAAEK,OAAOX,QAuE+CQ,KAAK,OAAOR,MAAOkH,MAEzE,qBAAKlE,QAtEC,WACdtD,EAAS,CACPc,KAAM,UACNC,QAAS,CACPgF,WAAYnG,EAAM6D,KAClB8D,OACAC,QAGU7C,SAASC,iBAAiB,eAClCC,SAAQ,SAAAT,GACZA,EAAEW,UAAUC,OAAO,iBA2DU7C,UAAU,UAAjC,8DACA,qBAAKmB,QAAS,kBAAM8E,GAAW,IAAQjG,UAAU,MAAjD,SACE,mBAAGA,UAAU,oBA9CH,WAEpB,IADA,IAAIsG,EAAM,GADgB,WAEjB/B,GACP+B,EAAIjC,KACF,qBAEElD,QAAS,kBAjBSmE,EAiBcf,OAhBtC1G,EAAS,CACPc,KAAM,0BACNC,QAAS,CACPgF,WAAYnG,EAAM6D,KAClBuC,UAAWyB,EACXnH,MAAOP,EAAMyC,QAAQ5C,EAAM6D,MAAMhB,MAAM8D,oBAAoBkB,MANxC,IAACA,GAkBlBtF,UAAS,mBAAcpC,EAAMyC,QAAQ5C,EAAM6D,MAAMhB,MAAM8D,oBAAoBG,GAAK,UAAY,KAFvFA,KAHFA,EAAI,EAAGA,EAAI3G,EAAMyC,QAAQ5C,EAAM6D,MAAMhB,MAAM4D,UAAWK,IAAM,EAA5DA,GAST,OACE,qBAAKvE,UAAU,kBAAf,SACGsG,IAoCEC,SAyCX,SAASb,EAAKjI,GAAQ,IAAD,EACSC,qBAAWC,GAA/BC,EADW,EACXA,MAAOC,EADI,EACJA,SADI,EAEMK,oBAAS,GAFf,mBAEZsI,EAFY,KAENC,EAFM,OAGYvI,oBAAS,GAHrB,mBAGZwI,EAHY,KAGHC,EAHG,KAKbC,EAAa,WACbJ,GACFG,GAAY,GAEdF,GAAUD,IAGNhD,EAAS,SAACtE,GACdrB,EAAS,CACPc,KAAM,eACNC,QAAS,CACPiI,IAAK,SACL1I,MAAOe,KAGX0H,KAGF,OACE,sBAAK5G,UAAU,SAAf,UACE,sBAAKmB,QAASyF,EAAY5G,UAAU,kBAApC,UACIwG,EAAsB,6CAAf5I,EAAMwB,QACd,KACFoH,GACC,sBAAKxG,UAAU,kBAAf,UACE,qBACEmB,QAAS,kBAAMwF,EAAY,SAC3BG,MAAO,CAAEC,SAAU,OAAQC,aAAc,QACzChH,UAAS,cAAqB,SAAZ0G,GAAsB,WAH1C,kBAIa,SAAZA,GACC,sBAAK1G,UAAU,kBAAf,UACE,qBAAKmB,QAAS,kBAAMqC,EAAO,YAAYsD,MAAO,CAAEC,SAAU,OAAQC,aAAc,OAAQ5E,MAAO,QAAUpC,UAAU,MAAnH,gBACA,qBAAKmB,QAAS,kBAAMqC,EAAO,YAAYsD,MAAO,CAAEC,SAAU,OAAQC,aAAc,OAAQ5E,MAAO,QAAUpC,UAAU,MAAnH,gBACA,qBAAKmB,QAAS,kBAAMqC,EAAO,YAAYsD,MAAO,CAAEC,SAAU,OAAQC,aAAc,OAAQ5E,MAAO,QAAUpC,UAAU,MAAnH,mBAGJ,qBACEmB,QAAS,kBAAMqC,EAAO,SACtBsD,MAAO,CAAEC,SAAU,OAAQC,aAAc,QACzChH,UAAS,cAAqB,SAAZ0G,GAAsB,WAH1C,wBAUV,SAASb,EAAKpI,GAAQ,IAAD,EACSC,qBAAWC,GAA/BC,EADW,EACXA,MAAOC,EADI,EACJA,SAEf,GAAqB,SAAjBD,EAAMwB,OAAmB,OAAO,KAapC,OACE,qBAAKY,UAAU,SAAf,SACE,qBACEmB,QAdS,WACbtD,EAAS,CACPc,KAAM,eACNC,QAAS,CACPiI,IAAK,WACL1I,OAAQP,EAAMqJ,aAUdjH,UAAS,cAAUpC,EAAMqJ,SAA4B,GAAjB,gBAFtC,iDCnQC,SAASC,IACd,OACE,qBAAIlH,UAAU,WAAd,UACE,8mBACA,wUCEN,SAASmH,EAAQvJ,EAAOwJ,GAAS,IAAD,EACV,CAACA,EAAOzI,KAAMyI,EAAOxI,SAAlCD,EADuB,KACjB0I,EADiB,KAExBC,EAAMD,EAAMA,EAAIrI,SAAW,KAC3BsB,EAAQgH,EAAM1J,EAAMyC,QAAQiH,EAAI9H,GAAGc,MAAQ,KAEjD,OAAQ3B,GACN,IAAK,oBAGH,IAHF,qBAC6ByI,EAAOxI,SAA1B0C,EADV,EACUA,KAAMC,EADhB,EACgBA,IACVxD,EAAOqJ,EAAOxI,QAAQb,KAAKsB,MAAM,QAC5BkF,EAAI,EAAGA,EAAIxG,EAAKqD,OAAQmD,IAC/B3G,EAAMyC,QAAQiB,GAAMhB,MAAMiH,OAAOhG,EAAKxD,GAC1B,GAARuD,GAAoB,GAAPC,GAAoE,KAAxD3D,EAAMyC,QAAQiB,GAAMhB,MAAMG,SAASc,EAAM,EAAGgD,GAAGxG,MAC1EH,EAAMyC,QAAQiB,GAAMhB,MAAMkE,SAASjD,EAAM,EAAGgD,EAAGxG,EAAKwG,IAGxD,OAAO,eAAK3G,GAEd,IAAK,mBAAL,qBAC2BwJ,EAAOxI,QAAQI,UAAhCQ,EADV,EACUA,EAAMM,GADhB,EACaL,EADb,EACgBK,GAId,YAHyBR,IAArB1B,EAAMyC,QAAQb,IAChB5B,EAAMyC,QAAQb,GAAGc,MAAMkH,iBAAiB1H,EAAGsH,EAAOxI,QAAQT,OAErD,eAAKP,GAEd,IAAK,eAQH,OAPA6J,OAAOC,EAAEL,EAAIR,KAAOQ,EAAIlJ,MACxBP,EAAMyJ,EAAIR,KAAOQ,EAAIlJ,MAEL,aAAZkJ,EAAIR,MACNQ,EAAIlJ,MAAQP,EAAMyC,QAAQ,GAAGC,MAAM2G,WAAarJ,EAAMyC,QAAQ,GAAGC,MAAMqH,cAGlE,eAAK/J,GAEd,IAAK,gBAEH,OADAA,EAAMyC,QAAQgH,EAAIrI,SAASQ,GAAGc,MAAMsH,gBAAgBP,EAAIlJ,MAAQkJ,EAAIrI,SAAW,MACxE,eAAKpB,GAEd,IAAK,aAIH,OAHAA,EAAMyC,QAAQqC,SAAQ,SAACmF,GACrBA,EAAEvH,MAAMsH,gBAAgB,SAEnB,eAAKhK,GAEd,IAAK,UAEH,OADA0C,EAAMkE,QAAQ8C,EAAI7H,EAAG6H,EAAIxH,EAAGuH,EAAIlJ,OACzB,eAAKP,GAEd,IAAK,WAEH,OADAA,EAAMyC,QAAQgH,EAAI/F,MAAMhB,MAAMwH,SAAST,EAAI9F,KACpC,eAAK3D,GAEd,IAAK,WAEH,OADAA,EAAMyC,QAAQgH,GAAK/G,MAAMyH,WAClB,eAAKnK,GAEd,IAAK,aAEH,OADAA,EAAMyC,QAAQgH,EAAIzD,YAAYtD,MAAM0H,WAAWX,EAAIxD,UAAWwD,EAAIvD,YAC3D,eAAKlG,GAEd,IAAK,oBAEH,OADAA,EAAMyC,QAAQgH,GAAK/G,MAAM2H,sBAClB,eAAKrK,GAEd,IAAK,UAEH,OADAA,EAAMyC,QAAQgH,EAAIzD,YAAYtD,MAAM6E,QAAQkC,EAAIjC,KAAMiC,EAAIhC,IACnD,eAAKzH,GAEd,IAAK,0BAEH,OADAA,EAAMyC,QAAQgH,EAAIzD,YAAYtD,MAAM4H,wBAAwBb,EAAIxD,UAAWwD,EAAIlJ,OACxE,eAAKP,GAEd,IAAK,kBAEH,OADAA,EAAMyC,QAAQgH,EAAIzH,UAAUU,MAAM6H,gBAAgBd,EAAIxH,QAASwH,EAAIlJ,OAC5D,eAAKP,GAEd,QACE,MAAM,IAAIsH,OAIT,IAAIvH,EAAayK,wBAAc,MAiDvBC,MA/Cf,WAAgB,IAAD,EAEaC,qBAAWnB,EAAS,CAE5CoB,YAAa,EACbnJ,OAAQ,OACR6H,UAAU,EAEV5G,QAAS,CACP,CACEC,MAAO,IAAI0D,EAAW,EAAG,GAAGwE,QAE9B,CACElI,MAAO,IAAI0D,EAAW,EAAG,GAAGwE,WAbrB,mBAEN5K,EAFM,KAECC,EAFD,OAkBWK,oBAAS,GAlBpB,mBAkBNsK,EAlBM,KAkBAC,EAlBA,KAoCb,OAhBAlJ,qBAAU,WACRiD,SAASkG,KAAKC,iBAAiB,WAAW,SAAClK,GACzCZ,EAAS,CACPc,KAAM,kBAGV6D,SAASkG,KAAKC,iBAAiB,SAAS,WACpBnG,SAASC,iBAAiB,iBAClCC,SAAQ,SAACkG,GACjBA,EAAGhG,UAAUC,OAAO,cAGxB4F,GAAQ,GACRhB,OAAOC,EAAI,CAAEtI,OAAQ,UACpB,CAACoJ,IAGF,eAAC7K,EAAWkL,SAAZ,CAAqB1K,MAAO,CAAEP,QAAOC,YAArC,UACE,sBAAKmC,UAAU,OAAf,UACE,cAAC+D,EAAD,IACA,cAACyB,EAAD,CAAclE,KAAK,SAErB,cAAC4F,EAAD,QCzHS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjI,MAAK,YAAkD,IAA/CkI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhH,SAASiH,eAAe,SAM1BX,M","file":"static/js/main.b89347ab.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\"\r\nimport { AppContext } from \"../App\"\r\n\r\nexport function Cell(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const d = props.data.options.disabled\r\n  const [value, setValue] = useState(\"\")\r\n  const [selected, setSelected] = useState(false)\r\n  const [spellcheckerError, spellcheckerErrorArray] = useState([])\r\n\r\n  const change = (e) => {\r\n    const val = e.target.value;\r\n    setValue(val)\r\n    dispatch({\r\n      type: \"setCell\",\r\n      payload: {\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const selecting = (e, val) => {\r\n    dispatch({\r\n      type: \"selectingCell\",\r\n      payload: {\r\n        node: e.target.closest('.cell-wrapper'),\r\n        position: props.position,\r\n        value: val\r\n      }\r\n    })\r\n  }\r\n\r\n  const copy = () => {\r\n    const SC = state.company[props.position.p].table.selectedCell\r\n    if (SC) {\r\n      const SCvalue = state.company[props.position.p].table.getCell(SC.x, SC.y)\r\n      if (SC.x === props.position.x) { // только в своей колонке\r\n        dispatch({\r\n          type: \"setCell\",\r\n          payload: {\r\n            position: props.position,\r\n            value: SCvalue.data\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const spellcheck = (e) => {\r\n    if (props.spellcheck) {\r\n      const word = e.target.value\r\n      fetch('https://speller.yandex.net/services/spellservice.json/checkText?text=' + word)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          spellcheckerErrorArray(res)\r\n        })\r\n    }\r\n  }\r\n\r\n  const getFrequency = (n) => {\r\n    const MPval = state.method.split(\" \")[1]\r\n    const MP = MPval !== undefined ? MPval : 8\r\n\r\n    if (n > 5000) return \"СВЧ\"\r\n    else if (n > 1000) return \"ВЧ\"\r\n    else if (n > 100) return \"СЧ\"\r\n    else if (n > MP) return \"НЧ\"\r\n    else return \"-\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Если изменяюетя YW пересчитываем частотность\r\n    if (+props.position.p === 0 && +props.position.x === 3) {\r\n      console.log(getFrequency(+value));\r\n      dispatch({\r\n        type: \"updateFrequency\",\r\n        payload: {\r\n          part_ind: props.position.p,\r\n          row_ind: props.position.y,\r\n          value: getFrequency(+value)\r\n        }\r\n      })\r\n    }\r\n  }, [value])\r\n\r\n  return (\r\n    <CellOptions {...props} d={d}>\r\n      <label\r\n        className=\"cell\"\r\n        onMouseDown={(e) => selecting(e, true)}\r\n        onMouseUp={(e) => selecting(e, false)}\r\n        onMouseMove={copy}>\r\n\r\n        <SpellcheckerErrorIndicator d={spellcheckerError} />\r\n\r\n        <input\r\n          type={props.type}\r\n          onBlur={spellcheck}\r\n          className=\"cell-input\"\r\n          value={props.data.data}\r\n          onChange={change}\r\n          disabled={d} />\r\n        {selected && <div className=\"selected-marker\" onClick={(e) => null}></div>}\r\n      </label>\r\n    </CellOptions>\r\n  )\r\n}\r\n\r\nfunction SpellcheckerErrorIndicator(props) {\r\n  if (props.d.length === 0) return null;\r\n  else {\r\n    return (\r\n      <div className=\"spellchecker-error-indicator\">\r\n        <i class=\"bi bi-question-octagon\"></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction CellOptions(props) {\r\n\r\n  const beforeOptions = () => {\r\n    if (props.part === \"0\" && props.col === \"0\") {\r\n      return <ActionOption {...props} icon=\"bi bi-eye\" />\r\n    }\r\n  }\r\n\r\n  const afterOptions = () => {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cell-wrapper\" disabled={props.d}>\r\n      <div className=\"before\">{beforeOptions()}</div>\r\n      {props.children}\r\n      <div className=\"after\">{afterOptions()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ActionOption(props) {\r\n\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const action = () => {\r\n    dispatch({\r\n      type: 'toggleRowDisable',\r\n      payload: { position: props.position, value: props.d }\r\n    })\r\n  }\r\n\r\n  return (<i onClick={action} className={props.icon}></i>)\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport { Cell } from \"./cell\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function Col(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n  const [menuStatus, setMenuStatus] = useState(false)\r\n  const colOptions = useRef(null);\r\n  let col = 'нет данных';\r\n\r\n  if (state.company[props.part] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  if (state.company[+props.part].table !== undefined) {\r\n    col = state.company[+props.part].table.rows.map((c, ind) => {\r\n      return <Cell\r\n        spellcheck={props.spellcheck}\r\n        type={props.type}\r\n        key={ind}\r\n        {...props}\r\n        data={c.cells[props.col]}\r\n        position={{ p: props.part, x: props.col, y: ind }} />\r\n    })\r\n  }\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation()\r\n    document.querySelectorAll(\".options.open\").forEach((m) => {\r\n      m.classList.remove(\"open\")\r\n    })\r\n    if (colOptions.current.classList.contains('open')) {\r\n      colOptions.current.classList.remove('open')\r\n    }\r\n    else {\r\n      colOptions.current.classList.add('open')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div width={props.width} className=\"col-wrapper\">\r\n      <div className=\"th\">\r\n        <span>{props.title}</span>\r\n        <div className=\"options\" ref={colOptions} onClick={onClick}>\r\n          <i className=\"bi-three-dots-vertical\"></i>\r\n          <Menu {...props} />\r\n        </div>\r\n      </div>\r\n      {col}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Menu(props) {\r\n  const { state, dispatch } = useContext(AppContext)\r\n\r\n  const insertFromCP = async () => {\r\n    let text = await navigator.clipboard.readText();\r\n    dispatch({\r\n      type: 'copyFromClipboard',\r\n      payload: {\r\n        part: props.part,\r\n        col: props.col,\r\n        data: text\r\n      }\r\n    });\r\n  }\r\n\r\n  const change = (e, cb) => {\r\n    e.stopPropagation()\r\n    e.target.closest('.options.open').classList.remove('open')\r\n    cb();\r\n  }\r\n\r\n  const changeSort = (sort) => {\r\n    dispatch({\r\n      type: 'sortColumn',\r\n      payload: {\r\n        part_index: props.part,\r\n        col_index: props.col,\r\n        sort_title: sort\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, insertFromCP)}>\r\n        <i className=\"bi bi-clipboard-plus\"></i>\r\n        <span>Вставить из буфера</span>\r\n      </div>\r\n\r\n      <div className=\"menu-item has-children\">\r\n        <i className=\"bi bi-funnel\"></i>\r\n        <span>Сортировать</span>\r\n\r\n        <div className=\"menu sub-menu\">\r\n          <div onClick={() => changeSort('upper_numeric')} className=\"menu-item\"><span>{'>'}</span></div>\r\n          <div onClick={() => changeSort('lower_numeric')} className=\"menu-item\"><span>{'<'}</span></div>\r\n          <div onClick={() => changeSort('upper_alphabetical')} className=\"menu-item\"><span>А-Я</span></div>\r\n          <div onClick={() => changeSort('lower_alphabetical')} className=\"menu-item\"><span>Я-А</span></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"delimeter\"></div>\r\n\r\n      <div className=\"menu-item\" onClick={(e) => change(e, () => dispatch({\r\n        type: \"clearCol\",\r\n        payload: {\r\n          part: props.part,\r\n          col: props.col\r\n        },\r\n      }))}>\r\n        <i class=\"bi bi-x-octagon\"></i>\r\n        <span>Очистить колонку</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useContext } from \"react\";\r\nimport { AppContext } from \"../App\"\r\nimport { Col } from \"./column\";\r\n\r\nexport function Table(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"0\" title=\"Ключевые фразы\" />\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"1\" title=\"Группы ключевых слов\" />\r\n      <Col type=\"text\" spellcheck={true} width=\"100\" part=\"0\" col=\"2\" title=\"Название компаний\" />\r\n      <Col type=\"number\" spellcheck={false} width=\"50\" part=\"0\" col=\"3\" title=\"YW\" />\r\n      <Col type=\"number\" spellcheck={false} width=\"50\" part=\"0\" col=\"4\" title='\"YW\"' />\r\n    </div>\r\n  )\r\n}","class TableClass {\r\n  constructor(n, p) {\r\n    this.colsCount = n\r\n    this.partIndex = p\r\n    this.selectedCell = null\r\n    this.rows = []\r\n    this.colIndexesToReplace = []\r\n  }\r\n\r\n  setCell(x, y, data) {\r\n    while (this.rows.length <= y) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n    if (this.rows[y] !== undefined && this.rows[y].cells[x] !== undefined) {\r\n      this.rows[+y].cells[+x].data = data;\r\n    }\r\n  }\r\n\r\n  getCell(x, y) {\r\n    return this.rows[y].cells[x]\r\n  }\r\n\r\n  setCol(x, data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      this.setCell(x, i, data[i]);\r\n    };\r\n    return this.rows;\r\n  }\r\n\r\n  getRow(y) {\r\n    return this.rows[y];\r\n  }\r\n\r\n  getCol(col_index) {\r\n    let col = []\r\n    this.rows.forEach((row) => {\r\n      col.push(row.cells[col_index])\r\n    })\r\n    return col\r\n  }\r\n\r\n  toggleRowDisable(y, value) {\r\n    this.rows[y].cells.forEach((cell) => {\r\n      cell.options.disabled = !value;\r\n    })\r\n    return this.rows;\r\n  }\r\n\r\n  newCell() {\r\n    return {\r\n      data: '',\r\n      options: {\r\n        disabled: false, // Отключено\r\n      }\r\n    }\r\n  }\r\n\r\n  newRow() {\r\n    let r = {\r\n      frequency: \"\", // Частотность\r\n      cells: []\r\n    };\r\n    for (let n = 0; n < this.colsCount; n++) {\r\n      r.cells.push(this.newCell());\r\n    }\r\n    return r;\r\n  }\r\n\r\n  setSelectedCell(val) {\r\n    this.selectedCell = val\r\n  }\r\n\r\n  clearCol(col) {\r\n    this.rows.forEach((row) => {\r\n      row.cells[col].data = \"\"\r\n    })\r\n  }\r\n\r\n  clearAll() {\r\n    this.rows.forEach(r => {\r\n      r.cells.forEach(c => {\r\n        c.data = \"\"\r\n      })\r\n    })\r\n  }\r\n\r\n  sortColumn(col_index, sort_title) {\r\n    switch (sort_title) {\r\n\r\n      case \"upper_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return a.cells[col_index].data - b.cells[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"lower_numeric\":\r\n        this.rows.sort((a, b) => {\r\n          return b.cells[col_index].data - a.cells[col_index].data\r\n        })\r\n        return\r\n\r\n      case \"upper_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a.cells[col_index].data.toLowerCase(),\r\n            strB = b.cells[col_index].data.toLowerCase()\r\n          if (strA < strB) return -1\r\n          if (strA > strB) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      case \"lower_alphabetical\":\r\n        this.rows.sort((a, b) => {\r\n          const strA = a.cells[col_index].data.toLowerCase(),\r\n            strB = b.cells[col_index].data.toLowerCase()\r\n          if (strB < strA) return -1\r\n          if (strB > strA) return 1\r\n          return 0\r\n        })\r\n        return\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  cut_square_brackets() {\r\n    this.rows.forEach(row => {\r\n      row.cells.forEach(cell => {\r\n        cell.data = cell.data.replace(/\\[.*?\\]/g, '');\r\n      })\r\n    })\r\n  }\r\n\r\n  replace(from, to) {\r\n    this.rows.forEach(row => {\r\n      row.cells.forEach((cell, ind) => {\r\n        if (this.colIndexesToReplace[ind]) {\r\n          cell.data = cell.data.replace(from, to);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  changeColFromReplaceBar(colIndex, value) {\r\n    this.colIndexesToReplace[colIndex] = !value\r\n  }\r\n\r\n  updateFrequency(rowInd, val) {\r\n    this.rows[rowInd].frequency = val\r\n  }\r\n\r\n  quotable() {\r\n    this.rows.forEach(row => {\r\n      row.cells.forEach((cell, ind) => {\r\n        if (ind === 0 && cell.data.length > 0 && cell.data[0] !== '\"') {\r\n          cell.data = '\"' + cell.data + '\"';\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  unquotable() {\r\n    this.rows.forEach(row => {\r\n      row.cells.forEach((cell, ind) => {\r\n        cell.data = cell.data.replace(/\"/g, \"\")\r\n      })\r\n    })\r\n  }\r\n\r\n  init() {\r\n    // add rows to table\r\n    for (let i = 0; i < 10; i++) {\r\n      this.rows.push(this.newRow());\r\n    }\r\n\r\n    for (let n = 0; n < this.colsCount; n++) {\r\n      this.colIndexesToReplace.push(false)\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default TableClass;","import React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AppContext } from \"../App\";\r\n\r\nexport function ControlBar_1(props) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Btn />\r\n      <div className=\"delimeter\"></div>\r\n      {/* <Btn1 /> */}\r\n      <Btn2 />\r\n      <CutSquareBrackets {...props} />\r\n      <BtnReplace {...props} />\r\n      <Btn3 />\r\n      <div className=\"delimeter\"></div>\r\n      <BtnClearAll {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => { alert('Переход на этап 2') }} className=\"btn\">На второй шаг</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnClearAll(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const clearAll = () => {\r\n    dispatch({\r\n      type: \"clearAll\",\r\n      payload: props.part\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={clearAll} className=\"btn\">Очистить всё</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CutSquareBrackets(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => {\r\n        dispatch({\r\n          type: \"cutSquareBrackets\",\r\n          payload: props.part\r\n        })\r\n      }} className=\"btn\">[*]</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction BtnReplace(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [open, toggleOpen] = useState(false)\r\n  const [from, setFrom] = useState('')\r\n  const [to, setTo] = useState('')\r\n\r\n  const changeFrom = (e) => {\r\n    setFrom(e.target.value)\r\n  }\r\n\r\n  const changeTo = (e) => {\r\n    setTo(e.target.value)\r\n  }\r\n\r\n  const replace = () => {\r\n    dispatch({\r\n      type: 'replace',\r\n      payload: {\r\n        part_index: props.part,\r\n        from,\r\n        to\r\n      }\r\n    })\r\n    const cells = document.querySelectorAll('.cell-input')\r\n    cells.forEach(c => {\r\n      c.classList.remove('find-word')\r\n    })\r\n  }\r\n\r\n  const changeColBarItem = (colIndex) => {\r\n    dispatch({\r\n      type: \"changeColFromReplaceBar\",\r\n      payload: {\r\n        part_index: props.part,\r\n        col_index: colIndex,\r\n        value: state.company[props.part].table.colIndexesToReplace[colIndex]\r\n      }\r\n    })\r\n  }\r\n\r\n  const colChangerBar = () => {\r\n    let bar = [];\r\n    for (let i = 0; i < state.company[props.part].table.colsCount; i++) {\r\n      bar.push(\r\n        <div\r\n          key={i}\r\n          onClick={() => changeColBarItem(i)}\r\n          className={`col-icon ${state.company[props.part].table.colIndexesToReplace[i] ? 'changed' : ''}`}>\r\n        </div >\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"col-changer-bar\">\r\n        {bar}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (from !== \"\") {\r\n      const cells = document.querySelectorAll('.cell-input')\r\n      cells.forEach(c => {\r\n        if (c.value.indexOf(from) >= 0) {\r\n          c.classList.add('find-word')\r\n        }\r\n        else {\r\n          c.classList.remove('find-word')\r\n        }\r\n      })\r\n    }\r\n  }, [from])\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={() => toggleOpen(!open)} className=\"btn\">{'ABC > XYZ'}</div>\r\n      {open &&\r\n        <div className=\"replace-form\">\r\n          <div className=\"d-flex\">\r\n            <label>\r\n              <input placeholder=\"найти\" onChange={changeFrom} type=\"text\" value={from} />\r\n            </label>\r\n            <label>\r\n              <input placeholder=\"и заменить\" onChange={changeTo} type=\"text\" value={to} />\r\n            </label>\r\n            <div onClick={replace} className=\"btn mr5\">Заменить</div>\r\n            <div onClick={() => toggleOpen(false)} className=\"btn\">\r\n              <i className=\"bi bi-x-lg\"></i>\r\n            </div>\r\n          </div>\r\n          {colChangerBar()}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn1(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'walletCount',\r\n        value: state.walletCount + n\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? 'Кол-во объявлений' : 'Закрыть'}\r\n        {!menu && <span className=\"badge\">{state.walletCount}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div onClick={() => change(1)} className=\"btn icon\"><i className=\"bi bi-plus\"></i></div>\r\n          <span className=\"wallet-count\" style={{ fontSize: '1.5rem', margin: '5px', display: 'block' }}>{state.walletCount}</span>\r\n          <div onClick={() => change(-1)} className=\"btn icon\"><i className=\"bi bi-dash\"></i></div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn2(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [menu, openMenu] = useState(false);\r\n  const [submenu, openSubmenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    if (menu) {\r\n      openSubmenu(false)\r\n    }\r\n    openMenu(!menu);\r\n  }\r\n\r\n  const change = (n) => {\r\n    dispatch({\r\n      type: 'updateOption',\r\n      payload: {\r\n        key: 'method',\r\n        value: n\r\n      }\r\n    })\r\n    toggleMenu();\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div onClick={toggleMenu} className=\"btn has-submenu\">\r\n        {!menu ? state.method : 'Закрыть'}\r\n        {false && <span className=\"badge\">{state.method}</span>}</div>\r\n      {menu &&\r\n        <div className=\"sidebar-submenu\">\r\n          <div\r\n            onClick={() => openSubmenu('SKAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'SKAG' && 'changed'}`}>SKAG</div>\r\n          {submenu === 'SKAG' &&\r\n            <div className=\"sidebar-submenu\">\r\n              <div onClick={() => change('SKAG 10')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">10</div>\r\n              <div onClick={() => change('SKAG 15')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">15</div>\r\n              <div onClick={() => change('SKAG 20')} style={{ fontSize: '1rem', marginBottom: '10px', width: '100%' }} className=\"btn\">20</div>\r\n            </div>\r\n          }\r\n          <div\r\n            onClick={() => change('STAG')}\r\n            style={{ fontSize: '1rem', marginBottom: '10px' }}\r\n            className={`btn ${submenu === 'STAG' && 'changed'}`}>STAG</div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Btn3(props) {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  if (state.method === \"STAG\") return null\r\n\r\n  const toggle = () => {\r\n    dispatch({\r\n      type: \"updateOption\",\r\n      payload: {\r\n        key: \"quotable\",\r\n        value: !state.quotable\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div\r\n        onClick={toggle}\r\n        className={`btn ${!state.quotable ? \"line-through\" : \"\"}`}>\r\n        \"СВЧ-СЧ\"\r\n      </div>\r\n    </div>\r\n  )\r\n}","\r\n\r\nexport function FAQ() {\r\n  return (\r\n    <ul className=\"faq part\">\r\n      <li>Для распространения значения ячейки в столбце, выделите нужную ячейку и, удерживая ЛКМ, двигайтесь вверх или вниз</li>\r\n      <li>Кнопка \"Очистить всё\" полностью очищает текущую таблицу </li>\r\n    </ul>\r\n  )\r\n}","import { useReducer, createContext, useState, useEffect } from 'react';\nimport './App.scss';\n// Components\nimport { Table } from './c/table';\nimport TableClass from './c/tableClass';\nimport { ControlBar_1 } from './c/controlbar_1';\nimport { FAQ } from './c/faq';\n\nfunction reducer(state, action) {\n  const [type, pay] = [action.type, action.payload]\n  const pos = pay ? pay.position : null\n  const table = pos ? state.company[pos.p].table : null\n\n  switch (type) {\n    case 'copyFromClipboard':\n      const { part, col } = { ...action.payload };\n      let data = action.payload.data.split('\\r\\n');\n      for (let i = 0; i < data.length; i++) {\n        state.company[part].table.setCol(col, data)\n        if (part == 0 && col == 1 && state.company[part].table.getCell(+col + 1, i).data === \"\") { // Если название компании в строке пустое, копируем из групп\n          state.company[part].table.setCell(+col + 1, i, data[i])\n        }\n      }\n      return { ...state }\n\n    case 'toggleRowDisable':\n      const { p, x, y } = { ...action.payload.position }\n      if (state.company[p] !== undefined) {\n        state.company[p].table.toggleRowDisable(y, action.payload.value);\n      }\n      return { ...state }\n\n    case 'updateOption':\n      window.o[pay.key] = pay.value\n      state[pay.key] = pay.value\n\n      if (pay.key === \"quotable\") {\n        pay.value ? state.company[0].table.quotable() : state.company[0].table.unquotable()\n      }\n\n      return { ...state }\n\n    case \"selectingCell\":\n      state.company[pay.position.p].table.setSelectedCell(pay.value ? pay.position : null)\n      return { ...state }\n\n    case \"copyModOff\":\n      state.company.forEach((t) => {\n        t.table.setSelectedCell(null)\n      })\n      return { ...state }\n\n    case \"setCell\":\n      table.setCell(pos.x, pos.y, pay.value)\n      return { ...state }\n\n    case \"clearCol\":\n      state.company[pay.part].table.clearCol(pay.col)\n      return { ...state }\n\n    case \"clearAll\":\n      state.company[pay].table.clearAll()\n      return { ...state }\n\n    case \"sortColumn\":\n      state.company[pay.part_index].table.sortColumn(pay.col_index, pay.sort_title)\n      return { ...state }\n\n    case \"cutSquareBrackets\":\n      state.company[pay].table.cut_square_brackets()\n      return { ...state }\n\n    case \"replace\":\n      state.company[pay.part_index].table.replace(pay.from, pay.to)\n      return { ...state }\n\n    case \"changeColFromReplaceBar\":\n      state.company[pay.part_index].table.changeColFromReplaceBar(pay.col_index, pay.value)\n      return { ...state }\n\n    case \"updateFrequency\":\n      state.company[pay.part_ind].table.updateFrequency(pay.row_ind, pay.value)\n      return { ...state }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport let AppContext = createContext(null);\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, {\n    // OPTIONS\n    walletCount: 3,\n    method: \"STAG\",\n    quotable: false,\n    // PARTs\n    company: [\n      {\n        table: new TableClass(5, 0).init()\n      },\n      {\n        table: new TableClass(5, 1).init()\n      }\n    ],\n  })\n\n  const [init, setInit] = useState(false)\n\n  useEffect(() => {\n    document.body.addEventListener('mouseup', (e) => {\n      dispatch({\n        type: \"copyModOff\"\n      })\n    })\n    document.body.addEventListener(\"click\", () => {\n      const openMenus = document.querySelectorAll(\".options.open\")\n      openMenus.forEach((om) => {\n        om.classList.remove('open')\n      })\n    })\n    setInit(true)\n    window.o = { method: \"STAG\" }\n  }, [init])\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"part\">\n        <Table />\n        <ControlBar_1 part=\"0\" />\n      </div>\n      <FAQ />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}